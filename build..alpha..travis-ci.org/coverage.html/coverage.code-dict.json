{"/home/travis/build/npmtest/node-npmtest-swagger-node-express/test.js":"/* istanbul instrument in package npmtest_swagger_node_express */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-swagger-node-express/lib.npmtest_swagger_node_express.js":"/* istanbul instrument in package npmtest_swagger_node_express */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_swagger_node_express = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_swagger_node_express = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-swagger-node-express/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-swagger-node-express && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_swagger_node_express */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_swagger_node_express\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_swagger_node_express.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_swagger_node_express.rollup.js'] =\n            local.assetsDict['/assets.npmtest_swagger_node_express.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_swagger_node_express.__dirname + '/lib.npmtest_swagger_node_express.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-swagger-node-express/node_modules/swagger-node-express/index.js":"module.exports = require('./lib');\n","/home/travis/build/npmtest/node-npmtest-swagger-node-express/node_modules/swagger-node-express/lib/index.js":"var params            = require('./paramTypes');\nvar errorHandling     = require('./errorHandling');\nvar swagger           = require('./swagger');\n\nmodule.exports        = swagger;\nmodule.exports.params = params;\nmodule.exports.queryParam    = params.query;\nmodule.exports.pathParam     = params.path;\nmodule.exports.bodyParam     = params.body;\nmodule.exports.formParam     = params.form;\nmodule.exports.headerParam   = params.header;\nmodule.exports.error         = errorHandling.error;\n\n","/home/travis/build/npmtest/node-npmtest-swagger-node-express/node_modules/swagger-node-express/lib/paramTypes.js":"/**\n *  Copyright 2013 Wordnik, Inc.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n'use strict';\n\n\nexports.query = exports.q = function(name, description, type, required, allowableValuesEnum, defaultValue) {\n  return {\n    'name' : name,\n    'description' : description,\n    'type' : type,\n    'required' : required,\n    'enum' : allowableValuesEnum,\n    'defaultValue' : defaultValue,\n    'paramType' : 'query'\n  };\n};\n\nexports.path = function(name, description, type, allowableValuesEnum, defaultValue) {\n  return {\n    'name' : name,\n    'description' : description,\n    'type' : type,\n    'required' : true,\n    'enum' : allowableValuesEnum,\n    'paramType' : 'path',\n    'defaultValue' : defaultValue\n  };\n};\n\nexports.body = function(name, description, type, defaultValue, required) {\n  return {\n    'name' : name,\n    'description' : description,\n    'type' : type,\n    'required' : required || false,\n    'paramType' : 'body',\n    'defaultValue' : defaultValue\n  };\n};\n\nexports.form = function(name, description, type, required, allowableValuesEnum, defaultValue) {\n  return {\n    'name' : name,\n    'description' : description,\n    'type' : type,\n    'required' : (typeof required !== 'undefined') ? required : true,\n    'enum' : allowableValuesEnum,\n    'paramType' : 'form',\n    'defaultValue' : defaultValue\n  };\n};\n\nexports.header = function(name, description, type, required) {\n  return {\n    'name' : name,\n    'description' : description,\n    'type' : type,\n    'required' : required,\n    'allowMultiple' : false,\n    'paramType' : 'header'\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-swagger-node-express/node_modules/swagger-node-express/lib/errorHandling.js":"'use strict';\n\nexports.error = error;\n\n// TODO can this be removed?\n// Create Error JSON by code and text\nfunction error(code, description) {\n  return {\n    'code'   : code,\n    'message': description\n  };\n}\n","/home/travis/build/npmtest/node-npmtest-swagger-node-express/node_modules/swagger-node-express/lib/swagger.js":"/**\n *  Copyright 2014 Wordnik, Inc.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n'use strict';\n\nvar _ = require('lodash');\nvar allowedMethods = ['get', 'post', 'put', 'patch', 'delete'];\nvar allowedDataTypes = ['string', 'integer', 'boolean', 'array'];\nvar toJsonType = require('./toJsonType');\nvar shallowClone = require('./shallowClone');\nvar resourceHelpers = require('./resourceHelpers');\nvar wrap = resourceHelpers.wrap;\nvar appendToApi = resourceHelpers.appendToApi;\nvar params = require('./paramTypes');\n\n\n// TODO-3.0.0 REMOVE\nvar ignoreAppHandlerInConstructor = true;\n\n// TODO-3.0.0 REMOVE\n// For backwards compatability, we just export a new instance of Swagger\nmodule.exports = exports = new Swagger();\n\nfunction Swagger(appHandler) {\n\n  if (!(this instanceof Swagger)){\n    return new Swagger(appHandler);\n  }\n\n  this.formatString = '.{format}';\n  this.resourcePath = '/api-docs' + this.formatString;\n  this.jsonSuffix = '.json';\n  this.basePath = '/';\n  this.apiInfo = null;\n  this.authorizations = null;\n  this.swaggerVersion = '1.2';\n  this.apiVersion = '1.0';\n  this.allModels = {};\n  this.validators = [];\n  this.appHandler = appHandler || null;\n  this.resources = {};\n  this.paramTypes = params;\n\n  // For backwards compatability\n  this.getModels = this.allModels;\n\n  // TODO-3.0.0 REMOVE\n  ignoreAppHandlerInConstructor = false;\n}\n\n//TODO-3.0.0 REMOVE\n/**\n * returns a new instance of swagger\n */\nSwagger.prototype.createNew = function(appHandler){\n  return new Swagger(appHandler);\n};\n\nSwagger.prototype.configureSwaggerPaths = function(format, path, suffix) {\n  if(path.indexOf('/') !== 0) path = '/' + path;\n  this.formatString = format;\n  this.resourcePath = path;\n  this.jsonSuffix = suffix;\n};\n\n// Configuring swagger will set the basepath and api version for all\n// subdocuments.  It should only be done once, and during bootstrap of the app\n\nSwagger.prototype.configure = function(bp, av) {\n  var self = this;\n  self.basePath = bp;\n  self.apiVersion = av;\n  self.setResourceListingPaths(self.appHandler);\n\n  // add the GET for resource listing\n  var resourceListing = _.bind(self.resourceListing, self);\n  self.appHandler.get(self.resourcePath.replace(self.formatString, self.jsonSuffix), resourceListing);\n\n  // update resources if already configured\n\n  _.forOwn(self.resources, function (resource) {\n    resource.apiVersion = av;\n    resource.basePath = bp;\n  });\n};\n\n// Convenience to set default headers in each response.\n\nSwagger.prototype.setHeaders = function(res) {\n  res.header('Access-Control-Allow-Headers', 'Content-Type, api_key');\n  res.header('Content-Type', 'application/json; charset=utf-8');\n};\n\n// creates declarations for each resource path.\n\nSwagger.prototype.setResourceListingPaths = function(app) {\n  var self = this;\n  _.forOwn(this.resources, function (resource, key) {\n\n    // pet.json => api-docs.json/pet\n    var path = self.baseApiFromPath(key);\n    app.get(path, function (req, res) {\n      // find the api base path from the request URL\n      // /api-docs.json/pet => /pet.json\n\n      var p = self.basePathFromApi(req.url.split('?')[0]);\n\n      // this handles the request\n      // api-docs.json/pet => pet.{format}\n      var r = self.resources[p] || self.resources[p.replace(self.formatString, '')];\n      if (!r) {\n        console.error('unable to find listing');\n        return self.stopWithError(res, {\n          'message': 'internal error',\n          'code': 500\n        });\n      } else {\n        self.setHeaders(res);\n        var data = self.filterApiListing(req, res, r);\n        data.basePath = self.basePath;\n        if (data.code) {\n          res.send(data, data.code);\n        } else {\n          res.send(JSON.stringify(data));\n        }\n      }\n    });\n  });\n};\n\nSwagger.prototype.basePathFromApi = function(path) {\n  var l = this.resourcePath.replace(this.formatString, this.jsonSuffix);\n  var p = path.substring(l.length + 1) + this.formatString;\n  return p;\n};\n\nSwagger.prototype.baseApiFromPath = function(path) {\n  var p = this.resourcePath.replace(this.formatString, this.jsonSuffix) + '/' + path.replace(this.formatString, '');\n  return p;\n};\n\nSwagger.prototype.addPropertiesToRequiredModels = function(properties, requiredModels) {\n  var self = this;\n  _.forOwn(properties, function (property) {\n    var type = property.type;\n    if(type) {\n      switch (type) {\n      case 'array':\n        if (property.items) {\n          var ref = property.items.$ref;\n          if (ref && requiredModels.indexOf(ref) < 0) {\n            requiredModels.push(ref);\n            self.addPropertiesToRequiredModels(self.allModels[ref].properties, requiredModels);\n          }\n        }\n        break;\n      case 'string':\n      case 'integer':\n        break;\n      default:\n        if (requiredModels.indexOf(type) < 0) {\n          requiredModels.push(type);\n        }\n        break;\n      }\n    }\n    else {\n      if (property.$ref){\n        requiredModels.push(property.$ref);\n        self.addPropertiesToRequiredModels(self.allModels[property.$ref].properties, requiredModels);\n      }\n    }\n    if (property.properties) {\n      self.addPropertiesToRequiredModels(property.properties, requiredModels);\n    }\n  });\n};\n\n// Applies a filter to an api listing.  When done, the api listing will only contain\n// methods and models that the user actually has access to.\n\nSwagger.prototype.filterApiListing = function(req, res, r) {\n  var self = this;\n  var excludedPaths = [];\n\n  if (!r || !r.apis) {\n    return self.stopWithError(res, {\n      'message': 'internal error',\n      'code': 500\n    });\n  }\n\n  _.forOwn(r.apis, function (api) {\n    for (var opKey in api.operations) {\n      if (!api.operations.hasOwnProperty(opKey)) {\n        continue;\n      }\n      var op = api.operations[opKey];\n      var path = api.path.replace(self.formatString, '').replace(/{.*\\}/, '*');\n      if (!self.canAccessResource(req, path, op.method)) {\n        excludedPaths.push(op.method + ':' + api.path);\n      }\n    }\n  });\n\n  //  clone attributes in the resource\n  var output = shallowClone(r);\n\n  // clone arrays for\n  if(r.produces) output.produces = r.produces.slice(0);\n  if(r.consumes) output.consumes = r.consumes.slice(0);\n  if(r.authorizations) output.authorizations = r.authorizations.slice(0);\n  if(r.protocols) output.protocols = r.protocols.slice(0);\n\n  //  models required in the api listing\n  var requiredModels = [];\n\n  //  clone methods that user can access\n  output.apis = [];\n  var apis = JSON.parse(JSON.stringify(r.apis));\n  _.forOwn(apis, function (api) {\n    var clonedApi = shallowClone(api);\n\n    clonedApi.operations = [];\n    _.forOwn(api.operations, function (operation) {\n      if (excludedPaths.indexOf(operation.method + ':' + api.path) === -1) {\n        var co = JSON.parse(JSON.stringify(operation));\n        delete co.path;\n\n        var type = toJsonType(co.type);\n        if(type) {\n          for(var nm in type) {\n            delete co[nm];\n            co[nm] = type[nm];\n          }\n        }\n        clonedApi.operations.push(co);\n        self.addModelsFromBody(operation, requiredModels);\n        self.addModelsFromResponse(operation, requiredModels);\n      }\n    });\n    //  only add cloned api if there are operations\n    if (clonedApi.operations.length > 0) {\n      output.apis.push(clonedApi);\n    }\n  });\n\n  // add required models to output\n  output.models = {};\n  _.forOwn(requiredModels, function (modelName) {\n    var model = self.allModels[modelName];\n    if (model) {\n      output.models[modelName] = model;\n    }\n  });\n\n  //  look in object graph\n  _.forOwn(output.models, function (model) {\n    if (model && model.properties) {\n      self.addPropertiesToRequiredModels(model.properties, requiredModels);\n    }\n  });\n  _.forOwn(requiredModels, function (modelName) {\n    if (!output[modelName]) {\n      var model = self.allModels[modelName];\n      if (model) {\n        output.models[modelName] = model;\n      }\n    }\n  });\n\n  return output;\n};\n\n\n\n// Add model to list and parse List[model] elements\n\nSwagger.prototype.addModelsFromBody = function(operation, models) {\n  var self = this;\n  if (operation.parameters) {\n    _.forOwn(operation.parameters, function (param) {\n      if (param.paramType === 'body' && param.type) {\n        var model = param.type.replace(/^List\\[/, '').replace(/\\]/, '');\n        models.push(model);\n      }\n    });\n  }\n};\n\n// Add model to list and parse List[model] elements\n\nSwagger.prototype.addModelsFromResponse = function(operation, models) {\n  var responseModel = operation.type;\n  if(responseModel === 'array' && operation.items) {\n    var items = operation.items;\n    if(items.$ref) {\n      models.push(items.$ref);\n    } else if (items.type && allowedDataTypes.indexOf(items.type) === -1) {\n      models.push(items.type);\n    }\n  }\n  // if not void or a json-schema type, add the model\n  else if (responseModel !== 'void' && allowedDataTypes.indexOf(responseModel) === -1) {\n    models.push(responseModel);\n  }\n};\n\n\n// function for filtering a resource.  override this with your own implementation.\n// if consumer can access the resource, method returns true.\n\nSwagger.prototype.canAccessResource = function(req, path, method) {\n  for (var i = 0; i < this.validators.length; i++) {\n    var validator = this.validators[i];\n    if (_.isFunction(validator) && !validator(req, path, method)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * returns the json representation of a resource\n *\n * @param request\n * @param response\n */\n\nSwagger.prototype.resourceListing = function(req, res) {\n  var self = this;\n  var r = {\n    'apiVersion': self.apiVersion,\n    'swaggerVersion': self.swaggerVersion,\n    'apis': []\n  };\n\n  if(self.authorizations)\n    r.authorizations = self.authorizations;\n\n  if(self.apiInfo)\n    r.info = self.apiInfo;\n\n  _.forOwn(self.resources, function (value, key) {\n    var p = '/' + key.replace(self.formatString, '');\n    r.apis.push({\n      'path': p,\n      'description': value.description\n    });\n  });\n  self.setHeaders(res);\n  res.write(JSON.stringify(r));\n  res.end();\n};\n\n// Adds a method to the api along with a spec.  If the spec fails to validate, it won't be added\n\nSwagger.prototype.addMethod = function(app, callback, spec) {\n  var self = this;\n  var apiRootPath = spec.path.split(/[\\/\\(]/)[1];\n  var root = self.resources[apiRootPath];\n\n  if (root && root.apis) {\n    // this path already exists in swagger resources\n    _.forOwn(root.apis, function (api) {\n      if (api && api.path === spec.path && api.method === spec.method) {\n        // add operation & return\n        appendToApi(root, api, spec);\n        return;\n      }\n    });\n  }\n\n  var api = {\n    'path': spec.path\n  };\n  if (!self.resources[apiRootPath]) {\n    if (!root) {\n      //\n      var resourcePath = '/' + apiRootPath.replace(self.formatString, '');\n      root = {\n        'apiVersion': self.apiVersion,\n        'swaggerVersion': self.swaggerVersion,\n        'basePath': self.basePath,\n        'resourcePath': resourcePath,\n        'apis': [],\n        'models': []\n      };\n    }\n    self.resources[apiRootPath] = root;\n  }\n\n  root.apis.push(api);\n  appendToApi(root, api, spec);\n\n  //  convert .{format} to .json, make path params happy\n  var fullPath = spec.path.replace(self.formatString, self.jsonSuffix).replace(/\\/{/g, '/:').replace(/\\}/g, '');\n  var currentMethod = spec.method.toLowerCase();\n  if (allowedMethods.indexOf(currentMethod) > -1) {\n    app[currentMethod](fullPath, function (req, res, next) {\n      self.setHeaders(res);\n\n      // todo: needs to do smarter matching against the defined paths\n      var path = req.url.split('?')[0].replace(self.jsonSuffix, '').replace(/{.*\\}/, '*');\n      if (!self.canAccessResource(req, path, req.method)) {\n        res.send(JSON.stringify({\n          'message': 'forbidden',\n          'code': 403\n        }), 403);\n      } else {\n        callback(req, res, next);\n      }\n    });\n  } else {\n    console.error('unable to add ' + currentMethod.toUpperCase() + ' handler');\n    return;\n  }\n};\n\n// Set expressjs app handler\n\n// TODO-3.0.0 REMOVE\nSwagger.prototype.setAppHandler = function(app) {\n  if (!ignoreAppHandlerInConstructor) {\n    console.warn('setAppHandler is deprecated!  Pass it to the constructor instead.');\n  }\n  this.appHandler = app;\n};\n\n// Add swagger handlers to express\n\nSwagger.prototype.addHandlers = function(type, handlers) {\n  var self = this;\n  _.forOwn(handlers, function (handler) {\n    handler.spec.method = type;\n    self.addMethod(self.appHandler, handler.action, handler.spec);\n  });\n};\n\n// Discover swagger handler from resource\n\nSwagger.prototype.discover = function(resource) {\n  var self = this;\n  _.forOwn(resource, function (handler, key) {\n    if (handler.spec && handler.spec.method && allowedMethods.indexOf(handler.spec.method.toLowerCase()) > -1) {\n      self.addMethod(self.appHandler, handler.action, handler.spec);\n    } else\n      console.error('auto discover failed for: ' + key);\n  });\n};\n\n// Discover swagger handler from resource file path\n\nSwagger.prototype.setErrorHandler= function(handler) {\n  console.warn(\n    '.setErrorHandler() has been deprecated and is no longer used!  '\n    + 'You should use middleware with your express app instead.'\n  );\n};\n\nSwagger.prototype.discoverFile = function(file) {\n  return this.discover(require(file));\n};\n\n// adds get handler\n\nSwagger.prototype.addGet = Swagger.prototype.addGET = function() {\n  this.addHandlers('GET', arguments);\n  return this;\n};\n\n// adds post handler\n\nSwagger.prototype.addPost = Swagger.prototype.addPOST = function() {\n  this.addHandlers('POST', arguments);\n  return this;\n};\n\n// adds delete handler\n\nSwagger.prototype.addDelete = Swagger.prototype.addDELETE = function() {\n  this.addHandlers('DELETE', arguments);\n  return this;\n};\n\n// adds put handler\n\nSwagger.prototype.addPut = Swagger.prototype.addPUT = function() {\n  this.addHandlers('PUT', arguments);\n  return this;\n};\n\n// adds patch handler\n\nSwagger.prototype.addPatch = Swagger.prototype.addPATCH = function() {\n  this.addHandlers('PATCH', arguments);\n  return this;\n};\n\n// adds models to swagger\n\nSwagger.prototype.addModels = function(models) {\n  models = _.cloneDeep(models).models;\n  var self = this;\n  if (!self.allModels) {\n    self.allModels = models;\n  } else {\n    _.forOwn(models, function (model, key) {\n      self.allModels[key] = model;\n    });\n  }\n  return this;\n};\n\nSwagger.prototype.addValidator = function(v) {\n  this.validators.push(v);\n};\n\n// Stop express ressource with error code\nSwagger.prototype.stopWithError = function(res, error) {\n  this.setHeaders(res);\n  if (error && error.message && error.code)\n    console.log(JSON.stringify(error));\n\n  res.send(JSON.stringify({\n    'message': 'internal error',\n    'code': 500\n  }), 500);\n};\n\nSwagger.prototype.setApiInfo = function(data) {\n  this.apiInfo = data;\n};\n\nSwagger.prototype.setAuthorizations = function(data) {\n  this.authorizations = data;\n};\n\n// Export most needed error types for easier handling\nSwagger.prototype.errors = {\n  'notFound': function (field, res) {\n    if (!res) {\n      return {\n        'code': 404,\n        'message': field + ' not found'\n      };\n    } else {\n      res.send({\n        'code': 404,\n        'message': field + ' not found'\n      }, 404);\n    }\n  },\n  'invalid': function (field, res) {\n    if (!res) {\n      return {\n        'code': 400,\n        'message': 'invalid ' + field\n      };\n    } else {\n      res.send({\n        'code': 400,\n        'message': 'invalid ' + field\n      }, 404);\n    }\n  },\n  'forbidden': function (res) {\n    if (!res) {\n      return {\n        'code': 403,\n        'message': 'forbidden'\n      };\n    } else {\n      res.send({\n        'code': 403,\n        'message': 'forbidden'\n      }, 403);\n    }\n  }\n};\n\nSwagger.prototype.configureDeclaration = function(resourceName, obj) {\n  if(this.resources[resourceName]) {\n    var resource = this.resources[resourceName];\n\n    if(obj.description) {\n      resource.description = obj.description;\n    }\n    if(obj.consumes) {\n      resource.consumes = obj.consumes;\n    }\n    if(obj.produces) {\n      resource.produces = obj.produces;\n    }\n    if(obj.protocols) {\n      resource.protocols = obj.protocols;\n    }\n    if(obj.authorizations) {\n      resource.authorizations = obj.authorizations;\n    }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-swagger-node-express/node_modules/swagger-node-express/lib/toJsonType.js":"'use strict';\n\nmodule.exports = toJsonType;\n\nvar mappings = {\n  'int': {\n    type: 'integer',\n    format: 'int32'\n  },\n  'long': {\n    type: 'integer',\n    format: 'int64'\n  },\n  'float': {\n    type: 'number',\n    format: 'float'\n  },\n  'double': {\n    type: 'number',\n    format: 'double'\n  },\n  'date': {\n    type: 'string',\n    format: 'date-time'\n  }\n};\n\nfunction toJsonType(model) {\n  if(model && mappings[model]) {\n    return mappings[model];\n  }\n}\n\n","/home/travis/build/npmtest/node-npmtest-swagger-node-express/node_modules/swagger-node-express/lib/shallowClone.js":"'use strict';\n\nmodule.exports = shallowClone;\n\n// clone anything but objects to avoid shared references\nfunction shallowClone(obj) {\n  var cloned = {};\n  for (var i in obj) {\n    if (!obj.hasOwnProperty(i)) {\n      continue;\n    }\n    if (typeof (obj[i]) !== 'object') {\n      cloned[i] = obj[i];\n    }\n  }\n  return cloned;\n}\n","/home/travis/build/npmtest/node-npmtest-swagger-node-express/node_modules/swagger-node-express/lib/resourceHelpers.js":"'use strict';\n\nvar _ = require('lodash');\n\nmodule.exports.wrap = wrap;\nmodule.exports.appendToApi = appendToApi;\n\nfunction wrap(callback, req, resp) {\n  callback(req, resp);\n}\n\n// appends a spec to an existing operation\n\nfunction appendToApi(rootResource, api, spec) {\n  var validationErrors = [];\n\n  if (!spec.nickname || spec.nickname.indexOf(' ') >= 0) {\n    //  nicknames don't allow spaces\n    validationErrors.push({\n      'path': api.path,\n      'error': 'invalid nickname \"' + spec.nickname + '\"'\n    });\n  }\n  // validate params\n  _.forOwn(spec.parameters, function (parameter) {\n\n    switch (parameter.paramType) {\n    case 'path':\n      if (api.path.indexOf('{' + parameter.name + '}') < 0) {\n        validationErrors.push({\n          'path': api.path,\n          'name': parameter.name,\n          'error': 'invalid path'\n        });\n      }\n      break;\n    case 'query':\n      break;\n    case 'body':\n      break;\n    case 'form':\n      break;\n    case 'header':\n      break;\n    default:\n      validationErrors.push({\n        'path': api.path,\n        'name': parameter.name,\n        'error': 'invalid param type ' + parameter.paramType\n      });\n      break;\n    }\n  });\n\n  if (validationErrors.length > 0) {\n    console.error(validationErrors);\n    return;\n  }\n\n  if (!api.operations) {\n    api.operations = [];\n  }\n\n  // TODO: replace if existing HTTP operation in same api path\n  var op = {\n    'parameters': spec.parameters,\n    'method': spec.method,\n    'notes': spec.notes,\n    'responseMessages': spec.responseMessages,\n    'nickname': spec.nickname,\n    'summary': spec.summary,\n    'consumes' : spec.consumes,\n    'produces' : spec.produces\n  };\n\n  // Add custom fields.\n  op = _.extend({}, spec, op);\n\n  if (!spec.type) {\n    op.type = 'void';\n  }\n  api.operations.push(op);\n\n  if (!rootResource.models) {\n    rootResource.models = {};\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-swagger-node-express/node_modules/swagger-node-express/swagger-ui/spec.js":"var spec = \n{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"description\": \"This is a sample server Petstore server.  You can find out more about Swagger at <a href=\\\"http://swagger.wordnik.com\\\">http://swagger.wordnik.com</a> or on irc.freenode.net, #swagger.  For this sample, you can use the api key \\\"special-key\\\" to test the authorization filters\",\n    \"version\": \"1.0.0\",\n    \"title\": \"Swagger Petstore\",\n    \"termsOfService\": \"http://helloreverb.com/terms/\",\n    \"contact\": {\n      \"name\": \"apiteam@wordnik.com\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"host\": \"petstore.swagger.wordnik.com\",\n  \"basePath\": \"/v2\",\n  \"schemes\": [\n    \"http\"\n  ],\n  \"paths\": {\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a pet when ID < 10.  ID > 10 or nonintegers will simulate API error conditions\",\n        \"operationId\": \"getPetById\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"petId\",\n            \"description\": \"ID of pet that needs to be fetched\",\n            \"required\": true,\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Pet\"\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_oauth2\": [\"email\"]\n          }\n        ]\n      }\n    }\n  },\n  \"securityDefinitions\": {\n    \"api_key\": {\n      \"type\": \"apiKey\",\n      \"name\": \"api_key\",\n      \"in\": \"header\"\n    },\n    \"petstore_oauth2\": {\n      \"type\": \"oauth2\",\n      \"flow\": \"implicit\",\n      \"tokenUrl\": \"http://petstore.swagger.wordnik.com/api/oauth/dialog\",\n      \"scopes\": {\n        \"email\": \"the email\"\n      }\n    }\n  },\n  \"definitions\": {\n    \"User\": {\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"xml\": {\n            \"name\": \"id\"\n          }\n        },\n        \"username\": {\n          \"type\": \"string\",\n          \"xml\": {\n            \"name\": \"username\"\n          }\n        },\n        \"firstName\": {\n          \"type\": \"string\",\n          \"xml\": {\n            \"name\": \"firstName\"\n          }\n        },\n        \"lastName\": {\n          \"type\": \"string\",\n          \"xml\": {\n            \"name\": \"lastName\"\n          }\n        },\n        \"email\": {\n          \"type\": \"string\",\n          \"xml\": {\n            \"name\": \"email\"\n          }\n        },\n        \"password\": {\n          \"type\": \"string\",\n          \"xml\": {\n            \"name\": \"password\"\n          }\n        },\n        \"phone\": {\n          \"type\": \"string\",\n          \"xml\": {\n            \"name\": \"phone\"\n          }\n        },\n        \"userStatus\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"xml\": {\n            \"name\": \"userStatus\"\n          },\n          \"description\": \"User Status\"\n        }\n      },\n      \"xml\": {\n        \"name\": \"User\"\n      }\n    },\n    \"Category\": {\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"xml\": {\n            \"name\": \"id\"\n          }\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"xml\": {\n            \"name\": \"name\"\n          }\n        }\n      },\n      \"xml\": {\n        \"name\": \"Category\"\n      }\n    },\n    \"Pet\": {\n      \"required\": [\n        \"name\",\n        \"photoUrls\"\n      ],\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"xml\": {\n            \"name\": \"id\"\n          }\n        },\n        \"category\": {\n          \"xml\": {\n            \"name\": \"category\"\n          },\n          \"$ref\": \"Category\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"doggie\",\n          \"xml\": {\n            \"name\": \"name\"\n          }\n        },\n        \"photoUrls\": {\n          \"type\": \"array\",\n          \"xml\": {\n            \"name\": \"photoUrl\",\n            \"wrapped\": true\n          },\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"xml\": {\n            \"name\": \"tag\",\n            \"wrapped\": true\n          },\n          \"items\": {\n            \"$ref\": \"Tag\"\n          }\n        },\n        \"status\": {\n          \"type\": \"string\",\n          \"xml\": {\n            \"name\": \"status\"\n          },\n          \"description\": \"pet status in the store\"\n        }\n      },\n      \"xml\": {\n        \"name\": \"Pet\"\n      }\n    },\n    \"Tag\": {\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"xml\": {\n            \"name\": \"id\"\n          }\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"xml\": {\n            \"name\": \"name\"\n          }\n        }\n      },\n      \"xml\": {\n        \"name\": \"Tag\"\n      }\n    },\n    \"Order\": {\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"xml\": {\n            \"name\": \"id\"\n          }\n        },\n        \"petId\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"xml\": {\n            \"name\": \"petId\"\n          }\n        },\n        \"quantity\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"xml\": {\n            \"name\": \"quantity\"\n          }\n        },\n        \"shipDate\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"xml\": {\n            \"name\": \"shipDate\"\n          }\n        },\n        \"status\": {\n          \"type\": \"string\",\n          \"xml\": {\n            \"name\": \"status\"\n          },\n          \"description\": \"Order Status\"\n        },\n        \"complete\": {\n          \"type\": \"boolean\"\n        }\n      },\n      \"xml\": {\n        \"name\": \"Order\"\n      }\n    }\n  }\n}","/home/travis/build/npmtest/node-npmtest-swagger-node-express/node_modules/swagger-node-express/swagger-ui/swagger-ui.js":"// swagger-ui.js\n// version 2.1.0-alpha.3\n$(function() {\r\n\r\n\t// Helper function for vertically aligning DOM elements\r\n\t// http://www.seodenver.com/simple-vertical-align-plugin-for-jquery/\r\n\t$.fn.vAlign = function() {\r\n\t\treturn this.each(function(i){\r\n\t\tvar ah = $(this).height();\r\n\t\tvar ph = $(this).parent().height();\r\n\t\tvar mh = (ph - ah) / 2;\r\n\t\t$(this).css('margin-top', mh);\r\n\t\t});\r\n\t};\r\n\r\n\t$.fn.stretchFormtasticInputWidthToParent = function() {\r\n\t\treturn this.each(function(i){\r\n\t\tvar p_width = $(this).closest(\"form\").innerWidth();\r\n\t\tvar p_padding = parseInt($(this).closest(\"form\").css('padding-left') ,10) + parseInt($(this).closest(\"form\").css('padding-right'), 10);\r\n\t\tvar this_padding = parseInt($(this).css('padding-left'), 10) + parseInt($(this).css('padding-right'), 10);\r\n\t\t$(this).css('width', p_width - p_padding - this_padding);\r\n\t\t});\r\n\t};\r\n\r\n\t$('form.formtastic li.string input, form.formtastic textarea').stretchFormtasticInputWidthToParent();\r\n\r\n\t// Vertically center these paragraphs\r\n\t// Parent may need a min-height for this to work..\r\n\t$('ul.downplayed li div.content p').vAlign();\r\n\r\n\t// When a sandbox form is submitted..\r\n\t$(\"form.sandbox\").submit(function(){\r\n\r\n\t\tvar error_free = true;\r\n\r\n\t\t// Cycle through the forms required inputs\r\n \t\t$(this).find(\"input.required\").each(function() {\r\n\r\n\t\t\t// Remove any existing error styles from the input\r\n\t\t\t$(this).removeClass('error');\r\n\r\n\t\t\t// Tack the error style on if the input is empty..\r\n\t\t\tif ($(this).val() == '') {\r\n\t\t\t\t$(this).addClass('error');\r\n\t\t\t\t$(this).wiggle();\r\n\t\t\t\terror_free = false;\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\treturn error_free;\r\n\t});\r\n\r\n});\r\n\r\nfunction clippyCopiedCallback(a) {\r\n  $('#api_key_copied').fadeIn().delay(1000).fadeOut();\r\n\r\n  // var b = $(\"#clippy_tooltip_\" + a);\r\n  // b.length != 0 && (b.attr(\"title\", \"copied!\").trigger(\"tipsy.reload\"), setTimeout(function() {\r\n  //   b.attr(\"title\", \"copy to clipboard\")\r\n  // },\r\n  // 500))\r\n}\r\n\r\n// Logging function that accounts for browsers that don't have window.console\r\nlog = function(){\r\n  log.history = log.history || [];\r\n  log.history.push(arguments);\r\n  if(this.console){\r\n    console.log( Array.prototype.slice.call(arguments)[0] );\r\n  }\r\n};\r\n\r\n// Handle browsers that do console incorrectly (IE9 and below, see http://stackoverflow.com/a/5539378/7913)\r\nif (Function.prototype.bind && console && typeof console.log == \"object\") {\r\n    [\r\n      \"log\",\"info\",\"warn\",\"error\",\"assert\",\"dir\",\"clear\",\"profile\",\"profileEnd\"\r\n    ].forEach(function (method) {\r\n        console[method] = this.bind(console[method], console);\r\n    }, Function.prototype.call);\r\n}\r\n\r\nvar Docs = {\r\n\r\n\tshebang: function() {\r\n\r\n\t\t// If shebang has an operation nickname in it..\r\n\t\t// e.g. /docs/#!/words/get_search\r\n\t\tvar fragments = $.param.fragment().split('/');\r\n\t\tfragments.shift(); // get rid of the bang\r\n\r\n\t\tswitch (fragments.length) {\r\n\t\t\tcase 1:\r\n\t\t\t\t// Expand all operations for the resource and scroll to it\r\n\t\t\t\tvar dom_id = 'resource_' + fragments[0];\r\n\r\n\t\t\t\tDocs.expandEndpointListForResource(fragments[0]);\r\n\t\t\t\t$(\"#\"+dom_id).slideto({highlight: false});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\t// Refer to the endpoint DOM element, e.g. #words_get_search\r\n\r\n        // Expand Resource\r\n        Docs.expandEndpointListForResource(fragments[0]);\r\n        $(\"#\"+dom_id).slideto({highlight: false});\r\n\r\n        // Expand operation\r\n\t\t\t\tvar li_dom_id = fragments.join('_');\r\n\t\t\t\tvar li_content_dom_id = li_dom_id + \"_content\";\r\n\r\n\r\n\t\t\t\tDocs.expandOperation($('#'+li_content_dom_id));\r\n\t\t\t\t$('#'+li_dom_id).slideto({highlight: false});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoggleEndpointListForResource: function(resource) {\r\n\t\tvar elem = $('li#resource_' + Docs.escapeResourceName(resource) + ' ul.endpoints');\r\n\t\tif (elem.is(':visible')) {\r\n\t\t\tDocs.collapseEndpointListForResource(resource);\r\n\t\t} else {\r\n\t\t\tDocs.expandEndpointListForResource(resource);\r\n\t\t}\r\n\t},\r\n\r\n\t// Expand resource\r\n\texpandEndpointListForResource: function(resource) {\r\n\t\tvar resource = Docs.escapeResourceName(resource);\r\n\t\tif (resource == '') {\r\n\t\t\t$('.resource ul.endpoints').slideDown();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t$('li#resource_' + resource).addClass('active');\r\n\r\n\t\tvar elem = $('li#resource_' + resource + ' ul.endpoints');\r\n\t\telem.slideDown();\r\n\t},\r\n\r\n\t// Collapse resource and mark as explicitly closed\r\n\tcollapseEndpointListForResource: function(resource) {\r\n\t\tvar resource = Docs.escapeResourceName(resource);\r\n\t\t$('li#resource_' + resource).removeClass('active');\r\n\r\n\t\tvar elem = $('li#resource_' + resource + ' ul.endpoints');\r\n\t\telem.slideUp();\r\n\t},\r\n\r\n\texpandOperationsForResource: function(resource) {\r\n\t\t// Make sure the resource container is open..\r\n\t\tDocs.expandEndpointListForResource(resource);\r\n\t\t\r\n\t\tif (resource == '') {\r\n\t\t\t$('.resource ul.endpoints li.operation div.content').slideDown();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t$('li#resource_' + Docs.escapeResourceName(resource) + ' li.operation div.content').each(function() {\r\n\t\t\tDocs.expandOperation($(this));\r\n\t\t});\r\n\t},\r\n\r\n\tcollapseOperationsForResource: function(resource) {\r\n\t\t// Make sure the resource container is open..\r\n\t\tDocs.expandEndpointListForResource(resource);\r\n\r\n\t\t$('li#resource_' + Docs.escapeResourceName(resource) + ' li.operation div.content').each(function() {\r\n\t\t\tDocs.collapseOperation($(this));\r\n\t\t});\r\n\t},\r\n\r\n\tescapeResourceName: function(resource) {\r\n\t\treturn resource.replace(/[!\"#$%&'()*+,.\\/:;<=>?@\\[\\\\\\]\\^`{|}~]/g, \"\\\\$&\");\r\n\t},\r\n\r\n\texpandOperation: function(elem) {\r\n\t\telem.slideDown();\r\n\t},\r\n\r\n\tcollapseOperation: function(elem) {\r\n\t\telem.slideUp();\r\n\t}\r\n};(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates['apikey_button_view'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class='auth_button' id='apikey_button'><img class='auth_icon' alt='apply api key' src='images/apikey.jpeg'></div>\\n<div class='auth_container' id='apikey_container'>\\n  <div class='key_input_container'>\\n    <div class='auth_label'>\";\n  if (stack1 = helpers.keyName) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.keyName; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n    <input placeholder=\\\"api_key\\\" class=\\\"auth_input\\\" id=\\\"input_apiKey_entry\\\" name=\\\"apiKey\\\" type=\\\"text\\\"/>\\n    <div class='auth_submit'><a class='auth_submit_button' id=\\\"apply_api_key\\\" href=\\\"#\\\">apply</a></div>\\n  </div>\\n</div>\\n\\n\";\n  return buffer;\n  });\n})();\n\n(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates['basic_auth_button_view'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class='auth_button' id='basic_auth_button'><img class='auth_icon' src='images/password.jpeg'></div>\\n<div class='auth_container' id='basic_auth_container'>\\n  <div class='key_input_container'>\\n    <div class=\\\"auth_label\\\">Username</div>\\n    <input placeholder=\\\"username\\\" class=\\\"auth_input\\\" id=\\\"input_username\\\" name=\\\"username\\\" type=\\\"text\\\"/>\\n    <div class=\\\"auth_label\\\">Password</div>\\n    <input placeholder=\\\"password\\\" class=\\\"auth_input\\\" id=\\\"input_password\\\" name=\\\"password\\\" type=\\\"password\\\"/>\\n    <div class='auth_submit'><a class='auth_submit_button' id=\\\"apply_basic_auth\\\" href=\\\"#\\\">apply</a></div>\\n  </div>\\n</div>\\n\\n\";\n  });\n})();\n\n(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates['content_type'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n  \";\n  stack1 = helpers.each.call(depth0, depth0.produces, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t<option value=\\\"\";\n  stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\";\n  stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</option>\\n\t\";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \"\\n  <option value=\\\"application/json\\\">application/json</option>\\n\";\n  }\n\n  buffer += \"<label for=\\\"contentType\\\"></label>\\n<select name=\\\"contentType\\\">\\n\";\n  stack1 = helpers['if'].call(depth0, depth0.produces, {hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</select>\\n\";\n  return buffer;\n  });\n})();\n\n(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates['main'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, stack2, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, stack2;\n  buffer += \"\\n  <div class=\\\"info_title\\\">\"\n    + escapeExpression(((stack1 = ((stack1 = depth0.info),stack1 == null || stack1 === false ? stack1 : stack1.title)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</div>\\n  <div class=\\\"info_description\\\">\";\n  stack2 = ((stack1 = ((stack1 = depth0.info),stack1 == null || stack1 === false ? stack1 : stack1.description)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1);\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += \"</div>\\n  \";\n  stack2 = helpers['if'].call(depth0, ((stack1 = depth0.info),stack1 == null || stack1 === false ? stack1 : stack1.termsOfServiceUrl), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += \"\\n  \";\n  stack2 = helpers['if'].call(depth0, ((stack1 = depth0.info),stack1 == null || stack1 === false ? stack1 : stack1.contact), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += \"\\n  \";\n  stack2 = helpers['if'].call(depth0, ((stack1 = depth0.info),stack1 == null || stack1 === false ? stack1 : stack1.license), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += \"\\n  \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"<div class=\\\"info_tos\\\"><a href=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = depth0.info),stack1 == null || stack1 === false ? stack1 : stack1.termsOfServiceUrl)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\">Terms of service</a></div>\";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"<div class='info_contact'><a href=\\\"mailto:\"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = depth0.info),stack1 == null || stack1 === false ? stack1 : stack1.contact)),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\">Contact the developer</a></div>\";\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"<div class='info_license'><a href='\"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = depth0.info),stack1 == null || stack1 === false ? stack1 : stack1.license)),stack1 == null || stack1 === false ? stack1 : stack1.url)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"'>\"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = depth0.info),stack1 == null || stack1 === false ? stack1 : stack1.license)),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</a></div>\";\n  return buffer;\n  }\n\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    , <span style=\\\"font-variant: small-caps\\\">api version</span>: \"\n    + escapeExpression(((stack1 = ((stack1 = depth0.info),stack1 == null || stack1 === false ? stack1 : stack1.version)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n    \";\n  return buffer;\n  }\n\nfunction program10(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    <span style=\\\"float:right\\\"><a href=\\\"\";\n  if (stack1 = helpers.validatorUrl) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.validatorUrl; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"/debug?url=\";\n  if (stack1 = helpers.url) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.url; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"><img id=\\\"validator\\\" src=\\\"\";\n  if (stack1 = helpers.validatorUrl) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.validatorUrl; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"?url=\";\n  if (stack1 = helpers.url) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.url; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></a>\\n    </span>\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<div class='info' id='api_info'>\\n  \";\n  stack1 = helpers['if'].call(depth0, depth0.info, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\\n<div class='container' id='resources_container'>\\n  <ul id='resources'></ul>\\n\\n  <div class=\\\"footer\\\">\\n    <br>\\n    <br>\\n    <h4 style=\\\"color: #999\\\">[ <span style=\\\"font-variant: small-caps\\\">base url</span>: \";\n  if (stack1 = helpers.basePath) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.basePath; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"\\n    \";\n  stack2 = helpers['if'].call(depth0, ((stack1 = depth0.info),stack1 == null || stack1 === false ? stack1 : stack1.version), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += \"]\\n    \";\n  stack2 = helpers['if'].call(depth0, depth0.validatorUrl, {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += \"\\n    </h4>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n})();\n\n(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates['operation'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  return \"deprecated\";\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  return \"\\n            <h4>Warning: Deprecated</h4>\\n        \";\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n        <h4>Implementation Notes</h4>\\n        <p>\";\n  if (stack1 = helpers.description) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.description; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</p>\\n        \";\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  \n  return \"\\n        <div class=\\\"auth\\\">\\n        <span class=\\\"api-ic ic-error\\\"></span>\";\n  }\n\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n          <div id=\\\"api_information_panel\\\" style=\\\"top: 526px; left: 776px; display: none;\\\">\\n          \";\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n          </div>\\n        \";\n  return buffer;\n  }\nfunction program10(depth0,data) {\n  \n  var buffer = \"\", stack1, stack2;\n  buffer += \"\\n            <div title='\";\n  stack2 = ((stack1 = depth0.description),typeof stack1 === functionType ? stack1.apply(depth0) : stack1);\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += \"'>\"\n    + escapeExpression(((stack1 = depth0.scope),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</div>\\n          \";\n  return buffer;\n  }\n\nfunction program12(depth0,data) {\n  \n  \n  return \"</div>\";\n  }\n\nfunction program14(depth0,data) {\n  \n  \n  return \"\\n        <div class='access'>\\n          <span class=\\\"api-ic ic-off\\\" title=\\\"click to authenticate\\\"></span>\\n        </div>\\n        \";\n  }\n\nfunction program16(depth0,data) {\n  \n  \n  return \"\\n          <h4>Response Class</h4>\\n          <p><span class=\\\"model-signature\\\" /></p>\\n          <br/>\\n          <div class=\\\"response-content-type\\\" />\\n        \";\n  }\n\nfunction program18(depth0,data) {\n  \n  \n  return \"\\n          <h4>Parameters</h4>\\n          <table class='fullwidth'>\\n          <thead>\\n            <tr>\\n            <th style=\\\"width: 100px; max-width: 100px\\\">Parameter</th>\\n            <th style=\\\"width: 310px; max-width: 310px\\\">Value</th>\\n            <th style=\\\"width: 200px; max-width: 200px\\\">Description</th>\\n            <th style=\\\"width: 100px; max-width: 100px\\\">Parameter Type</th>\\n            <th style=\\\"width: 220px; max-width: 230px\\\">Data Type</th>\\n            </tr>\\n          </thead>\\n          <tbody class=\\\"operation-params\\\">\\n\\n          </tbody>\\n          </table>\\n          \";\n  }\n\nfunction program20(depth0,data) {\n  \n  \n  return \"\\n          <div style='margin:0;padding:0;display:inline'></div>\\n          <h4>Response Messages</h4>\\n          <table class='fullwidth'>\\n            <thead>\\n            <tr>\\n              <th>HTTP Status Code</th>\\n              <th>Reason</th>\\n              <th>Response Model</th>\\n            </tr>\\n            </thead>\\n            <tbody class=\\\"operation-status\\\">\\n            \\n            </tbody>\\n          </table>\\n          \";\n  }\n\nfunction program22(depth0,data) {\n  \n  \n  return \"\\n          \";\n  }\n\nfunction program24(depth0,data) {\n  \n  \n  return \"\\n          <div class='sandbox_header'>\\n            <input class='submit' name='commit' type='button' value='Try it out!' />\\n            <a href='#' class='response_hider' style='display:none'>Hide Response</a>\\n            <span class='response_throbber' style='display:none'></span>\\n          </div>\\n          \";\n  }\n\n  buffer += \"\\n  <ul class='operations' >\\n    <li class='\";\n  if (stack1 = helpers.method) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.method; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \" operation' id='\";\n  if (stack1 = helpers.parentId) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.parentId; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"_\";\n  if (stack1 = helpers.nickname) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.nickname; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"'>\\n      <div class='heading'>\\n        <h3>\\n          <span class='http_method'>\\n          <a href='#!/\";\n  if (stack1 = helpers.parentId) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.parentId; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"/\";\n  if (stack1 = helpers.nickname) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.nickname; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"' class=\\\"toggleOperation\\\">\";\n  if (stack1 = helpers.method) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.method; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</a>\\n          </span>\\n          <span class='path'>\\n          <a href='#!/\";\n  if (stack1 = helpers.parentId) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.parentId; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"/\";\n  if (stack1 = helpers.nickname) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.nickname; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"' class=\\\"toggleOperation \";\n  stack1 = helpers['if'].call(depth0, depth0.deprecated, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\";\n  if (stack1 = helpers.path) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.path; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</a>\\n          </span>\\n        </h3>\\n        <ul class='options'>\\n          <li>\\n          <a href='#!/\";\n  if (stack1 = helpers.parentId) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.parentId; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"/\";\n  if (stack1 = helpers.nickname) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.nickname; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"' class=\\\"toggleOperation\\\">\";\n  if (stack1 = helpers.summary) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.summary; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</a>\\n          </li>\\n        </ul>\\n      </div>\\n      <div class='content' id='\";\n  if (stack1 = helpers.parentId) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.parentId; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"_\";\n  if (stack1 = helpers.nickname) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.nickname; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"_content' style='display:none'>\\n        \";\n  stack1 = helpers['if'].call(depth0, depth0.deprecated, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, depth0.description, {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  options = {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data};\n  if (stack1 = helpers.oauth) { stack1 = stack1.call(depth0, options); }\n  else { stack1 = depth0.oauth; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if (!helpers.oauth) { stack1 = blockHelperMissing.call(depth0, stack1, options); }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers.each.call(depth0, depth0.oauth, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  options = {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data};\n  if (stack1 = helpers.oauth) { stack1 = stack1.call(depth0, options); }\n  else { stack1 = depth0.oauth; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if (!helpers.oauth) { stack1 = blockHelperMissing.call(depth0, stack1, options); }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  options = {hash:{},inverse:self.noop,fn:self.program(14, program14, data),data:data};\n  if (stack1 = helpers.oauth) { stack1 = stack1.call(depth0, options); }\n  else { stack1 = depth0.oauth; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if (!helpers.oauth) { stack1 = blockHelperMissing.call(depth0, stack1, options); }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, depth0.type, {hash:{},inverse:self.noop,fn:self.program(16, program16, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        <form accept-charset='UTF-8' class='sandbox'>\\n          <div style='margin:0;padding:0;display:inline'></div>\\n          \";\n  stack1 = helpers['if'].call(depth0, depth0.parameters, {hash:{},inverse:self.noop,fn:self.program(18, program18, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n          \";\n  stack1 = helpers['if'].call(depth0, depth0.responseMessages, {hash:{},inverse:self.noop,fn:self.program(20, program20, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n          \";\n  stack1 = helpers['if'].call(depth0, depth0.isReadOnly, {hash:{},inverse:self.program(24, program24, data),fn:self.program(22, program22, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        </form>\\n        <div class='response' style='display:none'>\\n          <h4>Request URL</h4>\\n          <div class='block request_url'></div>\\n          <h4>Response Body</h4>\\n          <div class='block response_body'></div>\\n          <h4>Response Code</h4>\\n          <div class='block response_code'></div>\\n          <h4>Response Headers</h4>\\n          <div class='block response_headers'></div>\\n        </div>\\n      </div>\\n    </li>\\n  </ul>\\n\";\n  return buffer;\n  });\n})();\n\n(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates['param'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\";\n  stack1 = helpers['if'].call(depth0, depth0.isFile, {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\t\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\t<input type=\\\"file\\\" name='\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"'/>\\n\t\t\t<div class=\\\"parameter-content-type\\\" />\\n\t\t\";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\t\";\n  stack1 = helpers['if'].call(depth0, depth0['default'], {hash:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\t\t\";\n  return buffer;\n  }\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\t\t<textarea class='body-textarea' name='\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"'>\";\n  if (stack1 = helpers['default']) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0['default']; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</textarea>\\n\t\t\t\";\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\t\t<textarea class='body-textarea' name='\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"'></textarea>\\n\t\t\t\t<br />\\n\t\t\t\t<div class=\\\"parameter-content-type\\\" />\\n\t\t\t\";\n  return buffer;\n  }\n\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\";\n  stack1 = helpers['if'].call(depth0, depth0.isFile, {hash:{},inverse:self.program(10, program10, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\t\";\n  return buffer;\n  }\nfunction program10(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\t\";\n  stack1 = helpers['if'].call(depth0, depth0['default'], {hash:{},inverse:self.program(13, program13, data),fn:self.program(11, program11, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\t\t\";\n  return buffer;\n  }\nfunction program11(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\t\t<input class='parameter' minlength='0' name='\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"' placeholder='' type='text' value='\";\n  if (stack1 = helpers['default']) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0['default']; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"'/>\\n\t\t\t\";\n  return buffer;\n  }\n\nfunction program13(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\t\t<input class='parameter' minlength='0' name='\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"' placeholder='' type='text' value=''/>\\n\t\t\t\";\n  return buffer;\n  }\n\n  buffer += \"<td class='code'>\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</td>\\n<td>\\n\\n\t\";\n  stack1 = helpers['if'].call(depth0, depth0.isBody, {hash:{},inverse:self.program(9, program9, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n</td>\\n<td>\";\n  if (stack1 = helpers.description) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.description; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</td>\\n<td>\";\n  if (stack1 = helpers.paramType) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.paramType; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</td>\\n<td>\\n\t<span class=\\\"model-signature\\\"></span>\\n</td>\\n\";\n  return buffer;\n  });\n})();\n\n(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates['param_list'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, stack2, options, self=this, helperMissing=helpers.helperMissing, functionType=\"function\", escapeExpression=this.escapeExpression;\n\nfunction program1(depth0,data) {\n  \n  \n  return \" multiple='multiple'\";\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  return \"\\n    \";\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n      \";\n  stack1 = helpers['if'].call(depth0, depth0.defaultValue, {hash:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  return buffer;\n  }\nfunction program6(depth0,data) {\n  \n  \n  return \"\\n      \";\n  }\n\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1, stack2, options;\n  buffer += \"\\n        \";\n  options = {hash:{},inverse:self.program(11, program11, data),fn:self.program(9, program9, data),data:data};\n  stack2 = ((stack1 = helpers.isArray || depth0.isArray),stack1 ? stack1.call(depth0, depth0, options) : helperMissing.call(depth0, \"isArray\", depth0, options));\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += \"\\n      \";\n  return buffer;\n  }\nfunction program9(depth0,data) {\n  \n  \n  return \"\\n        \";\n  }\n\nfunction program11(depth0,data) {\n  \n  \n  return \"\\n          <option selected=\\\"\\\" value=''></option>\\n        \";\n  }\n\nfunction program13(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n      \";\n  stack1 = helpers['if'].call(depth0, depth0.isDefault, {hash:{},inverse:self.program(16, program16, data),fn:self.program(14, program14, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  return buffer;\n  }\nfunction program14(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n        <option selected=\\\"\\\" value='\";\n  if (stack1 = helpers.value) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.value; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"'>\";\n  if (stack1 = helpers.value) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.value; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \" (default)</option>\\n      \";\n  return buffer;\n  }\n\nfunction program16(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n        <option value='\";\n  if (stack1 = helpers.value) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.value; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"'>\";\n  if (stack1 = helpers.value) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.value; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</option>\\n      \";\n  return buffer;\n  }\n\n  buffer += \"<td class='code'>\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</td>\\n<td>\\n  <select \";\n  options = {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data};\n  stack2 = ((stack1 = helpers.isArray || depth0.isArray),stack1 ? stack1.call(depth0, depth0, options) : helperMissing.call(depth0, \"isArray\", depth0, options));\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += \" class='parameter' name='\";\n  if (stack2 = helpers.name) { stack2 = stack2.call(depth0, {hash:{},data:data}); }\n  else { stack2 = depth0.name; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }\n  buffer += escapeExpression(stack2)\n    + \"'>\\n    \";\n  stack2 = helpers['if'].call(depth0, depth0.required, {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += \"\\n    \";\n  stack2 = helpers.each.call(depth0, ((stack1 = depth0.allowableValues),stack1 == null || stack1 === false ? stack1 : stack1.descriptiveValues), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += \"\\n  </select>\\n</td>\\n<td>\";\n  if (stack2 = helpers.description) { stack2 = stack2.call(depth0, {hash:{},data:data}); }\n  else { stack2 = depth0.description; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += \"</td>\\n<td>\";\n  if (stack2 = helpers.paramType) { stack2 = stack2.call(depth0, {hash:{},data:data}); }\n  else { stack2 = depth0.paramType; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += \"</td>\\n<td><span class=\\\"model-signature\\\"></span></td>\";\n  return buffer;\n  });\n})();\n\n(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates['param_readonly'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n        <textarea class='body-textarea' readonly='readonly' name='\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"'>\";\n  if (stack1 = helpers.defaultValue) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.defaultValue; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</textarea>\\n    \";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, depth0.defaultValue, {hash:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  return buffer;\n  }\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n            \";\n  if (stack1 = helpers.defaultValue) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.defaultValue; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"\\n        \";\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  \n  return \"\\n            (empty)\\n        \";\n  }\n\n  buffer += \"<td class='code'>\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</td>\\n<td>\\n    \";\n  stack1 = helpers['if'].call(depth0, depth0.isBody, {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</td>\\n<td>\";\n  if (stack1 = helpers.description) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.description; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</td>\\n<td>\";\n  if (stack1 = helpers.paramType) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.paramType; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</td>\\n<td><span class=\\\"model-signature\\\"></span></td>\\n\";\n  return buffer;\n  });\n})();\n\n(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates['param_readonly_required'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n        <textarea class='body-textarea'  readonly='readonly' placeholder='(required)' name='\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"'>\";\n  if (stack1 = helpers.defaultValue) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.defaultValue; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</textarea>\\n    \";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, depth0.defaultValue, {hash:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  return buffer;\n  }\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n            \";\n  if (stack1 = helpers.defaultValue) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.defaultValue; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"\\n        \";\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  \n  return \"\\n            (empty)\\n        \";\n  }\n\n  buffer += \"<td class='code required'>\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</td>\\n<td>\\n    \";\n  stack1 = helpers['if'].call(depth0, depth0.isBody, {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</td>\\n<td>\";\n  if (stack1 = helpers.description) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.description; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</td>\\n<td>\";\n  if (stack1 = helpers.paramType) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.paramType; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</td>\\n<td><span class=\\\"model-signature\\\"></span></td>\\n\";\n  return buffer;\n  });\n})();\n\n(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates['param_required'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\";\n  stack1 = helpers['if'].call(depth0, depth0.isFile, {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\t\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\t<input type=\\\"file\\\" name='\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"'/>\\n\t\t\";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\t\";\n  stack1 = helpers['if'].call(depth0, depth0.defaultValue, {hash:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\t\t\";\n  return buffer;\n  }\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\t\t<textarea class='body-textarea' placeholder='(required)' name='\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"'>\";\n  if (stack1 = helpers.defaultValue) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.defaultValue; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</textarea>\\n\t\t\t\";\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\t\t<textarea class='body-textarea' placeholder='(required)' name='\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"'></textarea>\\n\t\t\t\t<br />\\n\t\t\t\t<div class=\\\"parameter-content-type\\\" />\\n\t\t\t\";\n  return buffer;\n  }\n\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\";\n  stack1 = helpers['if'].call(depth0, depth0.isFile, {hash:{},inverse:self.program(12, program12, data),fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\t\";\n  return buffer;\n  }\nfunction program10(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\t<input class='parameter' class='required' type='file' name='\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"'/>\\n\t\t\";\n  return buffer;\n  }\n\nfunction program12(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\t\";\n  stack1 = helpers['if'].call(depth0, depth0.defaultValue, {hash:{},inverse:self.program(15, program15, data),fn:self.program(13, program13, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\t\t\";\n  return buffer;\n  }\nfunction program13(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\t\t<input class='parameter required' minlength='1' name='\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"' placeholder='(required)' type='text' value='\";\n  if (stack1 = helpers.defaultValue) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.defaultValue; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"'/>\\n\t\t\t\";\n  return buffer;\n  }\n\nfunction program15(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n\t\t\t\t<input class='parameter required' minlength='1' name='\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"' placeholder='(required)' type='text' value=''/>\\n\t\t\t\";\n  return buffer;\n  }\n\n  buffer += \"<td class='code required'>\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</td>\\n<td>\\n\t\";\n  stack1 = helpers['if'].call(depth0, depth0.isBody, {hash:{},inverse:self.program(9, program9, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</td>\\n<td>\\n\t<strong>\";\n  if (stack1 = helpers.description) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.description; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</strong>\\n</td>\\n<td>\";\n  if (stack1 = helpers.paramType) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.paramType; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</td>\\n<td><span class=\\\"model-signature\\\"></span></td>\\n\";\n  return buffer;\n  });\n})();\n\n(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates['parameter_content_type'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n  \";\n  stack1 = helpers.each.call(depth0, depth0.consumes, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n  <option value=\\\"\";\n  stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\";\n  stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</option>\\n  \";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \"\\n  <option value=\\\"application/json\\\">application/json</option>\\n\";\n  }\n\n  buffer += \"<label for=\\\"parameterContentType\\\"></label>\\n<select name=\\\"parameterContentType\\\">\\n\";\n  stack1 = helpers['if'].call(depth0, depth0.consumes, {hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</select>\\n\";\n  return buffer;\n  });\n})();\n\n(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates['resource'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  return \" : \";\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"<li>\\n      <a href='\";\n  if (stack1 = helpers.url) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.url; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"'>Raw</a>\\n    </li>\";\n  return buffer;\n  }\n\n  buffer += \"<div class='heading'>\\n  <h2>\\n    <a href='#!/\";\n  if (stack1 = helpers.id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.id; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"' class=\\\"toggleEndpointList\\\" data-id=\\\"\";\n  if (stack1 = helpers.id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.id; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</a> \";\n  options = {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data};\n  if (stack1 = helpers.summary) { stack1 = stack1.call(depth0, options); }\n  else { stack1 = depth0.summary; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if (!helpers.summary) { stack1 = blockHelperMissing.call(depth0, stack1, options); }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  if (stack1 = helpers.summary) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.summary; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n  </h2>\\n  <ul class='options'>\\n    <li>\\n      <a href='#!/\";\n  if (stack1 = helpers.id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.id; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"' id='endpointListTogger_\";\n  if (stack1 = helpers.id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.id; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"' class=\\\"toggleEndpointList\\\" data-id=\\\"\";\n  if (stack1 = helpers.id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.id; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">Show/Hide</a>\\n    </li>\\n    <li>\\n      <a href='#' class=\\\"collapseResource\\\" data-id=\\\"\";\n  if (stack1 = helpers.id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.id; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n        List Operations\\n      </a>\\n    </li>\\n    <li>\\n      <a href='#' class=\\\"expandResource\\\" data-id=\";\n  if (stack1 = helpers.id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.id; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \">\\n        Expand Operations\\n      </a>\\n    </li>\\n    \";\n  options = {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data};\n  if (stack1 = helpers.url) { stack1 = stack1.call(depth0, options); }\n  else { stack1 = depth0.url; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if (!helpers.url) { stack1 = blockHelperMissing.call(depth0, stack1, options); }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n  </ul>\\n</div>\\n<ul class='endpoints' id='\";\n  if (stack1 = helpers.id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.id; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"_endpoint_list' style='display:none'>\\n\\n</ul>\\n\";\n  return buffer;\n  });\n})();\n\n(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates['response_content_type'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n  \";\n  stack1 = helpers.each.call(depth0, depth0.produces, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n  <option value=\\\"\";\n  stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\";\n  stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</option>\\n  \";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \"\\n  <option value=\\\"application/json\\\">application/json</option>\\n\";\n  }\n\n  buffer += \"<label for=\\\"responseContentType\\\"></label>\\n<select name=\\\"responseContentType\\\">\\n\";\n  stack1 = helpers['if'].call(depth0, depth0.produces, {hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</select>\\n\";\n  return buffer;\n  });\n})();\n\n(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates['signature'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div>\\n<ul class=\\\"signature-nav\\\">\\n  <li><a class=\\\"description-link\\\" href=\\\"#\\\">Model</a></li>\\n  <li><a class=\\\"snippet-link\\\" href=\\\"#\\\">Model Schema</a></li>\\n</ul>\\n<div>\\n\\n<div class=\\\"signature-container\\\">\\n  <div class=\\\"description\\\">\\n    \";\n  if (stack1 = helpers.signature) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.signature; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n  </div>\\n\\n  <div class=\\\"snippet\\\">\\n    <pre><code>\";\n  if (stack1 = helpers.sampleJSON) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.sampleJSON; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</code></pre>\\n    <small class=\\\"notice\\\"></small>\\n  </div>\\n</div>\\n\\n\";\n  return buffer;\n  });\n})();\n\n(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates['status_code'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<td width='15%' class='code'>\";\n  if (stack1 = helpers.code) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.code; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</td>\\n<td>\";\n  if (stack1 = helpers.message) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.message; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</td>\\n<td width='50%'><span class=\\\"model-signature\\\" /></td>\";\n  return buffer;\n  });\n})();\n\n\n\n// Generated by CoffeeScript 1.6.3\n(function() {\n  var ApiKeyButton, BasicAuthButton, ContentTypeView, HeaderView, MainView, OperationView, ParameterContentTypeView, ParameterView, ResourceView, ResponseContentTypeView, SignatureView, StatusCodeView, SwaggerUi, _ref, _ref1, _ref10, _ref11, _ref12, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  SwaggerUi = (function(_super) {\n    __extends(SwaggerUi, _super);\n\n    function SwaggerUi() {\n      _ref = SwaggerUi.__super__.constructor.apply(this, arguments);\n      return _ref;\n    }\n\n    SwaggerUi.prototype.dom_id = \"swagger_ui\";\n\n    SwaggerUi.prototype.options = null;\n\n    SwaggerUi.prototype.api = null;\n\n    SwaggerUi.prototype.headerView = null;\n\n    SwaggerUi.prototype.mainView = null;\n\n    SwaggerUi.prototype.initialize = function(options) {\n      var _this = this;\n      if (options == null) {\n        options = {};\n      }\n      if (options.dom_id != null) {\n        this.dom_id = options.dom_id;\n        delete options.dom_id;\n      }\n      if ($('#' + this.dom_id) == null) {\n        $('body').append('<div id=\"' + this.dom_id + '\"></div>');\n      }\n      this.options = options;\n      this.options.success = function() {\n        return _this.render();\n      };\n      this.options.progress = function(d) {\n        return _this.showMessage(d);\n      };\n      this.options.failure = function(d) {\n        if (_this.api && _this.api.isValid === false) {\n          log(\"not a valid 2.0 spec, loading legacy client\");\n          _this.api = new SwaggerApi(_this.options);\n          return _this.api.build();\n        } else {\n          return _this.onLoadFailure(d);\n        }\n      };\n      this.headerView = new HeaderView({\n        el: $('#header')\n      });\n      return this.headerView.on('update-swagger-ui', function(data) {\n        return _this.updateSwaggerUi(data);\n      });\n    };\n\n    SwaggerUi.prototype.setOption = function(option, value) {\n      return this.options[option] = value;\n    };\n\n    SwaggerUi.prototype.getOption = function(option) {\n      return this.options[option];\n    };\n\n    SwaggerUi.prototype.updateSwaggerUi = function(data) {\n      this.options.url = data.url;\n      return this.load();\n    };\n\n    SwaggerUi.prototype.load = function() {\n      var url, _ref1;\n      if ((_ref1 = this.mainView) != null) {\n        _ref1.clear();\n      }\n      url = this.options.url;\n      if (url.indexOf(\"http\") !== 0) {\n        url = this.buildUrl(window.location.href.toString(), url);\n      }\n      this.options.url = url;\n      this.headerView.update(url);\n      this.api = new SwaggerClient(this.options);\n      return this.api.build();\n    };\n\n    SwaggerUi.prototype.render = function() {\n      var _this = this;\n      this.showMessage('Finished Loading Resource Information. Rendering Swagger UI...');\n      this.mainView = new MainView({\n        model: this.api,\n        el: $('#' + this.dom_id),\n        swaggerOptions: this.options\n      }).render();\n      this.showMessage();\n      switch (this.options.docExpansion) {\n        case \"full\":\n          Docs.expandOperationsForResource('');\n          break;\n        case \"list\":\n          Docs.collapseOperationsForResource('');\n      }\n      if (this.options.onComplete) {\n        this.options.onComplete(this.api, this);\n      }\n      return setTimeout(function() {\n        return Docs.shebang();\n      }, 400);\n    };\n\n    SwaggerUi.prototype.buildUrl = function(base, url) {\n      var endOfPath, parts;\n      log(\"base is \" + base);\n      if (url.indexOf(\"/\") === 0) {\n        parts = base.split(\"/\");\n        base = parts[0] + \"//\" + parts[2];\n        return base + url;\n      } else {\n        endOfPath = base.length;\n        if (base.indexOf(\"?\") > -1) {\n          endOfPath = Math.min(endOfPath, base.indexOf(\"?\"));\n        }\n        if (base.indexOf(\"#\") > -1) {\n          endOfPath = Math.min(endOfPath, base.indexOf(\"#\"));\n        }\n        base = base.substring(0, endOfPath);\n        if (base.indexOf(\"/\", base.length - 1) !== -1) {\n          return base + url;\n        }\n        return base + \"/\" + url;\n      }\n    };\n\n    SwaggerUi.prototype.showMessage = function(data) {\n      if (data == null) {\n        data = '';\n      }\n      $('#message-bar').removeClass('message-fail');\n      $('#message-bar').addClass('message-success');\n      return $('#message-bar').html(data);\n    };\n\n    SwaggerUi.prototype.onLoadFailure = function(data) {\n      var val;\n      if (data == null) {\n        data = '';\n      }\n      $('#message-bar').removeClass('message-success');\n      $('#message-bar').addClass('message-fail');\n      val = $('#message-bar').html(data);\n      if (this.options.onFailure != null) {\n        this.options.onFailure(data);\n      }\n      return val;\n    };\n\n    return SwaggerUi;\n\n  })(Backbone.Router);\n\n  window.SwaggerUi = SwaggerUi;\n\n  HeaderView = (function(_super) {\n    __extends(HeaderView, _super);\n\n    function HeaderView() {\n      _ref1 = HeaderView.__super__.constructor.apply(this, arguments);\n      return _ref1;\n    }\n\n    HeaderView.prototype.events = {\n      'click #show-pet-store-icon': 'showPetStore',\n      'click #show-wordnik-dev-icon': 'showWordnikDev',\n      'click #explore': 'showCustom',\n      'keyup #input_baseUrl': 'showCustomOnKeyup',\n      'keyup #input_apiKey': 'showCustomOnKeyup'\n    };\n\n    HeaderView.prototype.initialize = function() {};\n\n    HeaderView.prototype.showPetStore = function(e) {\n      return this.trigger('update-swagger-ui', {\n        url: \"http://petstore.swagger.wordnik.com/api/api-docs\"\n      });\n    };\n\n    HeaderView.prototype.showWordnikDev = function(e) {\n      return this.trigger('update-swagger-ui', {\n        url: \"http://api.wordnik.com/v4/resources.json\"\n      });\n    };\n\n    HeaderView.prototype.showCustomOnKeyup = function(e) {\n      if (e.keyCode === 13) {\n        return this.showCustom();\n      }\n    };\n\n    HeaderView.prototype.showCustom = function(e) {\n      if (e != null) {\n        e.preventDefault();\n      }\n      return this.trigger('update-swagger-ui', {\n        url: $('#input_baseUrl').val(),\n        apiKey: $('#input_apiKey').val()\n      });\n    };\n\n    HeaderView.prototype.update = function(url, apiKey, trigger) {\n      if (trigger == null) {\n        trigger = false;\n      }\n      $('#input_baseUrl').val(url);\n      if (trigger) {\n        return this.trigger('update-swagger-ui', {\n          url: url\n        });\n      }\n    };\n\n    return HeaderView;\n\n  })(Backbone.View);\n\n  MainView = (function(_super) {\n    var sorters;\n\n    __extends(MainView, _super);\n\n    function MainView() {\n      _ref2 = MainView.__super__.constructor.apply(this, arguments);\n      return _ref2;\n    }\n\n    sorters = {\n      'alpha': function(a, b) {\n        return a.path.localeCompare(b.path);\n      },\n      'method': function(a, b) {\n        return a.method.localeCompare(b.method);\n      }\n    };\n\n    MainView.prototype.initialize = function(opts) {\n      var auth, key, name, url, value, _ref3;\n      if (opts == null) {\n        opts = {};\n      }\n      this.model.auths = [];\n      _ref3 = this.model.securityDefinitions;\n      for (key in _ref3) {\n        value = _ref3[key];\n        auth = {\n          name: key,\n          type: value.type,\n          value: value\n        };\n        this.model.auths.push(auth);\n      }\n      if (this.model.info && this.model.info.license && typeof this.model.info.license === 'string') {\n        name = this.model.info.license;\n        url = this.model.info.licenseUrl;\n        this.model.info.license = {};\n        this.model.info.license.name = name;\n        this.model.info.license.url = url;\n      }\n      if (!this.model.info) {\n        this.model.info = {};\n      }\n      if (!this.model.info.version) {\n        this.model.info.version = this.model.apiVersion;\n      }\n      if (this.model.swaggerVersion === \"2.0\") {\n        if (\"validatorUrl\" in opts.swaggerOptions) {\n          return this.model.validatorUrl = opts.swaggerOptions.validatorUrl;\n        } else if (this.model.url.match(/https?:\\/\\/localhost/)) {\n          return this.model.validatorUrl = this.model.url;\n        } else {\n          return this.model.validatorUrl = \"http://online.swagger.io/validator\";\n        }\n      }\n    };\n\n    MainView.prototype.render = function() {\n      var auth, button, counter, id, name, resource, resources, _i, _len, _ref3;\n      if (this.model.securityDefinitions) {\n        for (name in this.model.securityDefinitions) {\n          auth = this.model.securityDefinitions[name];\n          if (auth.type === \"apiKey\" && $(\"#apikey_button\").length === 0) {\n            button = new ApiKeyButton({\n              model: auth\n            }).render().el;\n            $('.auth_main_container').append(button);\n          }\n          if (auth.type === \"basicAuth\" && $(\"#basic_auth_button\").length === 0) {\n            button = new BasicAuthButton({\n              model: auth\n            }).render().el;\n            $('.auth_main_container').append(button);\n          }\n        }\n      }\n      $(this.el).html(Handlebars.templates.main(this.model));\n      resources = {};\n      counter = 0;\n      _ref3 = this.model.apisArray;\n      for (_i = 0, _len = _ref3.length; _i < _len; _i++) {\n        resource = _ref3[_i];\n        id = resource.name;\n        while (typeof resources[id] !== 'undefined') {\n          id = id + \"_\" + counter;\n          counter += 1;\n        }\n        resource.id = id;\n        resources[id] = resource;\n        this.addResource(resource, this.model.auths);\n      }\n      return this;\n    };\n\n    MainView.prototype.addResource = function(resource, auths) {\n      var resourceView;\n      resource.id = resource.id.replace(/\\s/g, '_');\n      resourceView = new ResourceView({\n        model: resource,\n        tagName: 'li',\n        id: 'resource_' + resource.id,\n        className: 'resource',\n        auths: auths,\n        swaggerOptions: this.options.swaggerOptions\n      });\n      return $('#resources').append(resourceView.render().el);\n    };\n\n    MainView.prototype.clear = function() {\n      return $(this.el).html('');\n    };\n\n    return MainView;\n\n  })(Backbone.View);\n\n  ResourceView = (function(_super) {\n    __extends(ResourceView, _super);\n\n    function ResourceView() {\n      _ref3 = ResourceView.__super__.constructor.apply(this, arguments);\n      return _ref3;\n    }\n\n    ResourceView.prototype.initialize = function(opts) {\n      if (opts == null) {\n        opts = {};\n      }\n      this.auths = opts.auths;\n      if (\"\" === this.model.description) {\n        return this.model.description = null;\n      }\n    };\n\n    ResourceView.prototype.render = function() {\n      var counter, id, methods, operation, _i, _len, _ref4;\n      $(this.el).html(Handlebars.templates.resource(this.model));\n      methods = {};\n      if (this.model.description) {\n        this.model.summary = this.model.description;\n      }\n      _ref4 = this.model.operationsArray;\n      for (_i = 0, _len = _ref4.length; _i < _len; _i++) {\n        operation = _ref4[_i];\n        counter = 0;\n        id = operation.nickname;\n        while (typeof methods[id] !== 'undefined') {\n          id = id + \"_\" + counter;\n          counter += 1;\n        }\n        methods[id] = operation;\n        operation.nickname = id;\n        operation.parentId = this.model.id;\n        this.addOperation(operation);\n      }\n      $('.toggleEndpointList', this.el).click(this.callDocs.bind(this, 'toggleEndpointListForResource'));\n      $('.collapseResource', this.el).click(this.callDocs.bind(this, 'collapseOperationsForResource'));\n      $('.expandResource', this.el).click(this.callDocs.bind(this, 'expandOperationsForResource'));\n      return this;\n    };\n\n    ResourceView.prototype.addOperation = function(operation) {\n      var operationView;\n      operation.number = this.number;\n      operationView = new OperationView({\n        model: operation,\n        tagName: 'li',\n        className: 'endpoint',\n        swaggerOptions: this.options.swaggerOptions,\n        auths: this.auths\n      });\n      $('.endpoints', $(this.el)).append(operationView.render().el);\n      return this.number++;\n    };\n\n    ResourceView.prototype.callDocs = function(fnName, e) {\n      e.preventDefault();\n      return Docs[fnName](e.currentTarget.getAttribute('data-id'));\n    };\n\n    return ResourceView;\n\n  })(Backbone.View);\n\n  OperationView = (function(_super) {\n    __extends(OperationView, _super);\n\n    function OperationView() {\n      _ref4 = OperationView.__super__.constructor.apply(this, arguments);\n      return _ref4;\n    }\n\n    OperationView.prototype.invocationUrl = null;\n\n    OperationView.prototype.events = {\n      'submit .sandbox': 'submitOperation',\n      'click .submit': 'submitOperation',\n      'click .response_hider': 'hideResponse',\n      'click .toggleOperation': 'toggleOperationContent',\n      'mouseenter .api-ic': 'mouseEnter',\n      'mouseout .api-ic': 'mouseExit'\n    };\n\n    OperationView.prototype.initialize = function(opts) {\n      if (opts == null) {\n        opts = {};\n      }\n      this.auths = opts.auths;\n      return this;\n    };\n\n    OperationView.prototype.mouseEnter = function(e) {\n      var elem, hgh, pos, scMaxX, scMaxY, scX, scY, wd, x, y;\n      elem = $(e.currentTarget.parentNode).find('#api_information_panel');\n      x = e.pageX;\n      y = e.pageY;\n      scX = $(window).scrollLeft();\n      scY = $(window).scrollTop();\n      scMaxX = scX + $(window).width();\n      scMaxY = scY + $(window).height();\n      wd = elem.width();\n      hgh = elem.height();\n      if (x + wd > scMaxX) {\n        x = scMaxX - wd;\n      }\n      if (x < scX) {\n        x = scX;\n      }\n      if (y + hgh > scMaxY) {\n        y = scMaxY - hgh;\n      }\n      if (y < scY) {\n        y = scY;\n      }\n      pos = {};\n      pos.top = y;\n      pos.left = x;\n      elem.css(pos);\n      return $(e.currentTarget.parentNode).find('#api_information_panel').show();\n    };\n\n    OperationView.prototype.mouseExit = function(e) {\n      return $(e.currentTarget.parentNode).find('#api_information_panel').hide();\n    };\n\n    OperationView.prototype.render = function() {\n      var a, auth, auths, code, contentTypeModel, isMethodSubmissionSupported, k, key, o, param, ref, responseContentTypeView, responseSignatureView, schema, schemaObj, signatureModel, statusCode, type, v, value, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _m, _ref10, _ref11, _ref5, _ref6, _ref7, _ref8, _ref9;\n      isMethodSubmissionSupported = true;\n      if (!isMethodSubmissionSupported) {\n        this.model.isReadOnly = true;\n      }\n      this.model.description = this.model.description || this.model.notes;\n      if (this.model.description) {\n        this.model.description = this.model.description.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\n      }\n      this.model.oauth = null;\n      log(this.model.authorizations);\n      if (this.model.authorizations) {\n        if (Array.isArray(this.model.authorizations)) {\n          _ref5 = this.model.authorizations;\n          for (_i = 0, _len = _ref5.length; _i < _len; _i++) {\n            auths = _ref5[_i];\n            for (key in auths) {\n              auth = auths[key];\n              for (a in this.auths) {\n                auth = this.auths[a];\n                if (auth.type === 'oauth2') {\n                  this.model.oauth = {};\n                  this.model.oauth.scopes = [];\n                  _ref6 = auth.value.scopes;\n                  for (k in _ref6) {\n                    v = _ref6[k];\n                    o = {\n                      scope: k,\n                      description: v\n                    };\n                    this.model.oauth.scopes.push(o);\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          _ref7 = this.model.authorizations;\n          for (k in _ref7) {\n            v = _ref7[k];\n            if (k === \"oauth2\") {\n              if (this.model.oauth === null) {\n                this.model.oauth = {};\n              }\n              if (this.model.oauth.scopes === void 0) {\n                this.model.oauth.scopes = [];\n              }\n              for (_j = 0, _len1 = v.length; _j < _len1; _j++) {\n                o = v[_j];\n                this.model.oauth.scopes.push(o);\n              }\n            }\n          }\n        }\n      }\n      if (typeof this.model.responses !== 'undefined') {\n        this.model.responseMessages = [];\n        _ref8 = this.model.responses;\n        for (code in _ref8) {\n          value = _ref8[code];\n          schema = null;\n          schemaObj = this.model.responses[code].schema;\n          if (schemaObj && schemaObj['$ref']) {\n            schema = schemaObj['$ref'];\n            if (schema.indexOf('#/definitions/') === 0) {\n              schema = schema.substring('#/definitions/'.length);\n            }\n          }\n          this.model.responseMessages.push({\n            code: code,\n            message: value.description,\n            responseModel: schema\n          });\n        }\n      }\n      if (typeof this.model.responseMessages === 'undefined') {\n        this.model.responseMessages = [];\n      }\n      $(this.el).html(Handlebars.templates.operation(this.model));\n      if (this.model.responseClassSignature && this.model.responseClassSignature !== 'string') {\n        signatureModel = {\n          sampleJSON: this.model.responseSampleJSON,\n          isParam: false,\n          signature: this.model.responseClassSignature\n        };\n        responseSignatureView = new SignatureView({\n          model: signatureModel,\n          tagName: 'div'\n        });\n        $('.model-signature', $(this.el)).append(responseSignatureView.render().el);\n      } else {\n        this.model.responseClassSignature = 'string';\n        $('.model-signature', $(this.el)).html(this.model.type);\n      }\n      contentTypeModel = {\n        isParam: false\n      };\n      contentTypeModel.consumes = this.model.consumes;\n      contentTypeModel.produces = this.model.produces;\n      _ref9 = this.model.parameters;\n      for (_k = 0, _len2 = _ref9.length; _k < _len2; _k++) {\n        param = _ref9[_k];\n        type = param.type || param.dataType;\n        if (typeof type === 'undefined') {\n          schema = param.schema;\n          if (schema && schema['$ref']) {\n            ref = schema['$ref'];\n            if (ref.indexOf('#/definitions/') === 0) {\n              type = ref.substring('#/definitions/'.length);\n            } else {\n              type = ref;\n            }\n          }\n        }\n        if (type && type.toLowerCase() === 'file') {\n          if (!contentTypeModel.consumes) {\n            contentTypeModel.consumes = 'multipart/form-data';\n          }\n        }\n        param.type = type;\n      }\n      responseContentTypeView = new ResponseContentTypeView({\n        model: contentTypeModel\n      });\n      $('.response-content-type', $(this.el)).append(responseContentTypeView.render().el);\n      _ref10 = this.model.parameters;\n      for (_l = 0, _len3 = _ref10.length; _l < _len3; _l++) {\n        param = _ref10[_l];\n        this.addParameter(param, contentTypeModel.consumes);\n      }\n      _ref11 = this.model.responseMessages;\n      for (_m = 0, _len4 = _ref11.length; _m < _len4; _m++) {\n        statusCode = _ref11[_m];\n        this.addStatusCode(statusCode);\n      }\n      return this;\n    };\n\n    OperationView.prototype.addParameter = function(param, consumes) {\n      var paramView;\n      param.consumes = consumes;\n      paramView = new ParameterView({\n        model: param,\n        tagName: 'tr',\n        readOnly: this.model.isReadOnly\n      });\n      return $('.operation-params', $(this.el)).append(paramView.render().el);\n    };\n\n    OperationView.prototype.addStatusCode = function(statusCode) {\n      var statusCodeView;\n      statusCodeView = new StatusCodeView({\n        model: statusCode,\n        tagName: 'tr'\n      });\n      return $('.operation-status', $(this.el)).append(statusCodeView.render().el);\n    };\n\n    OperationView.prototype.submitOperation = function(e) {\n      var error_free, form, isFileUpload, map, o, opts, val, _i, _j, _k, _len, _len1, _len2, _ref5, _ref6, _ref7;\n      if (e != null) {\n        e.preventDefault();\n      }\n      form = $('.sandbox', $(this.el));\n      error_free = true;\n      form.find(\"input.required\").each(function() {\n        var _this = this;\n        $(this).removeClass(\"error\");\n        if (jQuery.trim($(this).val()) === \"\") {\n          $(this).addClass(\"error\");\n          $(this).wiggle({\n            callback: function() {\n              return $(_this).focus();\n            }\n          });\n          return error_free = false;\n        }\n      });\n      if (error_free) {\n        map = {};\n        opts = {\n          parent: this\n        };\n        isFileUpload = false;\n        _ref5 = form.find(\"input\");\n        for (_i = 0, _len = _ref5.length; _i < _len; _i++) {\n          o = _ref5[_i];\n          if ((o.value != null) && jQuery.trim(o.value).length > 0) {\n            map[o.name] = o.value;\n          }\n          if (o.type === \"file\") {\n            isFileUpload = true;\n          }\n        }\n        _ref6 = form.find(\"textarea\");\n        for (_j = 0, _len1 = _ref6.length; _j < _len1; _j++) {\n          o = _ref6[_j];\n          if ((o.value != null) && jQuery.trim(o.value).length > 0) {\n            map[o.name] = o.value;\n          }\n        }\n        _ref7 = form.find(\"select\");\n        for (_k = 0, _len2 = _ref7.length; _k < _len2; _k++) {\n          o = _ref7[_k];\n          val = this.getSelectedValue(o);\n          if ((val != null) && jQuery.trim(val).length > 0) {\n            map[o.name] = val;\n          }\n        }\n        opts.responseContentType = $(\"div select[name=responseContentType]\", $(this.el)).val();\n        opts.requestContentType = $(\"div select[name=parameterContentType]\", $(this.el)).val();\n        $(\".response_throbber\", $(this.el)).show();\n        if (isFileUpload) {\n          return this.handleFileUpload(map, form);\n        } else {\n          return this.model[\"do\"](map, opts, this.showCompleteStatus, this.showErrorStatus, this);\n        }\n      }\n    };\n\n    OperationView.prototype.success = function(response, parent) {\n      return parent.showCompleteStatus(response);\n    };\n\n    OperationView.prototype.handleFileUpload = function(map, form) {\n      var bodyParam, el, headerParams, o, obj, param, params, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref5, _ref6, _ref7, _ref8,\n        _this = this;\n      _ref5 = form.serializeArray();\n      for (_i = 0, _len = _ref5.length; _i < _len; _i++) {\n        o = _ref5[_i];\n        if ((o.value != null) && jQuery.trim(o.value).length > 0) {\n          map[o.name] = o.value;\n        }\n      }\n      bodyParam = new FormData();\n      params = 0;\n      _ref6 = this.model.parameters;\n      for (_j = 0, _len1 = _ref6.length; _j < _len1; _j++) {\n        param = _ref6[_j];\n        if (param.paramType === 'form') {\n          if (param.type.toLowerCase() !== 'file' && map[param.name] !== void 0) {\n            bodyParam.append(param.name, map[param.name]);\n          }\n        }\n      }\n      headerParams = {};\n      _ref7 = this.model.parameters;\n      for (_k = 0, _len2 = _ref7.length; _k < _len2; _k++) {\n        param = _ref7[_k];\n        if (param.paramType === 'header') {\n          headerParams[param.name] = map[param.name];\n        }\n      }\n      _ref8 = form.find('input[type~=\"file\"]');\n      for (_l = 0, _len3 = _ref8.length; _l < _len3; _l++) {\n        el = _ref8[_l];\n        if (typeof el.files[0] !== 'undefined') {\n          bodyParam.append($(el).attr('name'), el.files[0]);\n          params += 1;\n        }\n      }\n      this.invocationUrl = this.model.supportHeaderParams() ? (headerParams = this.model.getHeaderParams(map), this.model.urlify(map, false)) : this.model.urlify(map, true);\n      $(\".request_url\", $(this.el)).html(\"<pre></pre>\");\n      $(\".request_url pre\", $(this.el)).text(this.invocationUrl);\n      obj = {\n        type: this.model.method,\n        url: this.invocationUrl,\n        headers: headerParams,\n        data: bodyParam,\n        dataType: 'json',\n        contentType: false,\n        processData: false,\n        error: function(data, textStatus, error) {\n          return _this.showErrorStatus(_this.wrap(data), _this);\n        },\n        success: function(data) {\n          return _this.showResponse(data, _this);\n        },\n        complete: function(data) {\n          return _this.showCompleteStatus(_this.wrap(data), _this);\n        }\n      };\n      if (window.authorizations) {\n        window.authorizations.apply(obj);\n      }\n      if (params === 0) {\n        obj.data.append(\"fake\", \"true\");\n      }\n      jQuery.ajax(obj);\n      return false;\n    };\n\n    OperationView.prototype.wrap = function(data) {\n      var h, headerArray, headers, i, o, _i, _len;\n      headers = {};\n      headerArray = data.getAllResponseHeaders().split(\"\\r\");\n      for (_i = 0, _len = headerArray.length; _i < _len; _i++) {\n        i = headerArray[_i];\n        h = i.split(':');\n        if (h[0] !== void 0 && h[1] !== void 0) {\n          headers[h[0].trim()] = h[1].trim();\n        }\n      }\n      o = {};\n      o.content = {};\n      o.content.data = data.responseText;\n      o.headers = headers;\n      o.request = {};\n      o.request.url = this.invocationUrl;\n      o.status = data.status;\n      return o;\n    };\n\n    OperationView.prototype.getSelectedValue = function(select) {\n      var opt, options, _i, _len, _ref5;\n      if (!select.multiple) {\n        return select.value;\n      } else {\n        options = [];\n        _ref5 = select.options;\n        for (_i = 0, _len = _ref5.length; _i < _len; _i++) {\n          opt = _ref5[_i];\n          if (opt.selected) {\n            options.push(opt.value);\n          }\n        }\n        if (options.length > 0) {\n          return options;\n        } else {\n          return null;\n        }\n      }\n    };\n\n    OperationView.prototype.hideResponse = function(e) {\n      if (e != null) {\n        e.preventDefault();\n      }\n      $(\".response\", $(this.el)).slideUp();\n      return $(\".response_hider\", $(this.el)).fadeOut();\n    };\n\n    OperationView.prototype.showResponse = function(response) {\n      var prettyJson;\n      prettyJson = JSON.stringify(response, null, \"\\t\").replace(/\\n/g, \"<br>\");\n      return $(\".response_body\", $(this.el)).html(escape(prettyJson));\n    };\n\n    OperationView.prototype.showErrorStatus = function(data, parent) {\n      return parent.showStatus(data);\n    };\n\n    OperationView.prototype.showCompleteStatus = function(data, parent) {\n      return parent.showStatus(data);\n    };\n\n    OperationView.prototype.formatXml = function(xml) {\n      var contexp, formatted, indent, lastType, lines, ln, pad, reg, transitions, wsexp, _fn, _i, _len;\n      reg = /(>)(<)(\\/*)/g;\n      wsexp = /[ ]*(.*)[ ]+\\n/g;\n      contexp = /(<.+>)(.+\\n)/g;\n      xml = xml.replace(reg, '$1\\n$2$3').replace(wsexp, '$1\\n').replace(contexp, '$1\\n$2');\n      pad = 0;\n      formatted = '';\n      lines = xml.split('\\n');\n      indent = 0;\n      lastType = 'other';\n      transitions = {\n        'single->single': 0,\n        'single->closing': -1,\n        'single->opening': 0,\n        'single->other': 0,\n        'closing->single': 0,\n        'closing->closing': -1,\n        'closing->opening': 0,\n        'closing->other': 0,\n        'opening->single': 1,\n        'opening->closing': 0,\n        'opening->opening': 1,\n        'opening->other': 1,\n        'other->single': 0,\n        'other->closing': -1,\n        'other->opening': 0,\n        'other->other': 0\n      };\n      _fn = function(ln) {\n        var fromTo, j, key, padding, type, types, value;\n        types = {\n          single: Boolean(ln.match(/<.+\\/>/)),\n          closing: Boolean(ln.match(/<\\/.+>/)),\n          opening: Boolean(ln.match(/<[^!?].*>/))\n        };\n        type = ((function() {\n          var _results;\n          _results = [];\n          for (key in types) {\n            value = types[key];\n            if (value) {\n              _results.push(key);\n            }\n          }\n          return _results;\n        })())[0];\n        type = type === void 0 ? 'other' : type;\n        fromTo = lastType + '->' + type;\n        lastType = type;\n        padding = '';\n        indent += transitions[fromTo];\n        padding = ((function() {\n          var _j, _ref5, _results;\n          _results = [];\n          for (j = _j = 0, _ref5 = indent; 0 <= _ref5 ? _j < _ref5 : _j > _ref5; j = 0 <= _ref5 ? ++_j : --_j) {\n            _results.push('  ');\n          }\n          return _results;\n        })()).join('');\n        if (fromTo === 'opening->closing') {\n          return formatted = formatted.substr(0, formatted.length - 1) + ln + '\\n';\n        } else {\n          return formatted += padding + ln + '\\n';\n        }\n      };\n      for (_i = 0, _len = lines.length; _i < _len; _i++) {\n        ln = lines[_i];\n        _fn(ln);\n      }\n      return formatted;\n    };\n\n    OperationView.prototype.showStatus = function(response) {\n      var code, content, contentType, e, headers, json, opts, pre, response_body, response_body_el, url;\n      if (response.content === void 0) {\n        content = response.data;\n        url = response.url;\n      } else {\n        content = response.content.data;\n        url = response.request.url;\n      }\n      headers = response.headers;\n      contentType = headers && headers[\"Content-Type\"] ? headers[\"Content-Type\"].split(\";\")[0].trim() : null;\n      if (!content) {\n        code = $('<code />').text(\"no content\");\n        pre = $('<pre class=\"json\" />').append(code);\n      } else if (contentType === \"application/json\" || /\\+json$/.test(contentType)) {\n        json = null;\n        try {\n          json = JSON.stringify(JSON.parse(content), null, \"  \");\n        } catch (_error) {\n          e = _error;\n          json = \"can't parse JSON.  Raw result:\\n\\n\" + content;\n        }\n        code = $('<code />').text(json);\n        pre = $('<pre class=\"json\" />').append(code);\n      } else if (contentType === \"application/xml\" || /\\+xml$/.test(contentType)) {\n        code = $('<code />').text(this.formatXml(content));\n        pre = $('<pre class=\"xml\" />').append(code);\n      } else if (contentType === \"text/html\") {\n        code = $('<code />').html(_.escape(content));\n        pre = $('<pre class=\"xml\" />').append(code);\n      } else if (/^image\\//.test(contentType)) {\n        pre = $('<img>').attr('src', url);\n      } else {\n        code = $('<code />').text(content);\n        pre = $('<pre class=\"json\" />').append(code);\n      }\n      response_body = pre;\n      $(\".request_url\", $(this.el)).html(\"<pre></pre>\");\n      $(\".request_url pre\", $(this.el)).text(url);\n      $(\".response_code\", $(this.el)).html(\"<pre>\" + response.status + \"</pre>\");\n      $(\".response_body\", $(this.el)).html(response_body);\n      $(\".response_headers\", $(this.el)).html(\"<pre>\" + _.escape(JSON.stringify(response.headers, null, \"  \")).replace(/\\n/g, \"<br>\") + \"</pre>\");\n      $(\".response\", $(this.el)).slideDown();\n      $(\".response_hider\", $(this.el)).show();\n      $(\".response_throbber\", $(this.el)).hide();\n      response_body_el = $('.response_body', $(this.el))[0];\n      opts = this.options.swaggerOptions;\n      if (opts.highlightSizeThreshold && response.data.length > opts.highlightSizeThreshold) {\n        return response_body_el;\n      } else {\n        return hljs.highlightBlock(response_body_el);\n      }\n    };\n\n    OperationView.prototype.toggleOperationContent = function() {\n      var elem;\n      elem = $('#' + Docs.escapeResourceName(this.model.parentId) + \"_\" + this.model.nickname + \"_content\");\n      if (elem.is(':visible')) {\n        return Docs.collapseOperation(elem);\n      } else {\n        return Docs.expandOperation(elem);\n      }\n    };\n\n    return OperationView;\n\n  })(Backbone.View);\n\n  StatusCodeView = (function(_super) {\n    __extends(StatusCodeView, _super);\n\n    function StatusCodeView() {\n      _ref5 = StatusCodeView.__super__.constructor.apply(this, arguments);\n      return _ref5;\n    }\n\n    StatusCodeView.prototype.initialize = function() {};\n\n    StatusCodeView.prototype.render = function() {\n      var responseModel, responseModelView, template;\n      template = this.template();\n      $(this.el).html(template(this.model));\n      if (swaggerUi.api.models.hasOwnProperty(this.model.responseModel)) {\n        responseModel = {\n          sampleJSON: JSON.stringify(swaggerUi.api.models[this.model.responseModel].createJSONSample(), null, 2),\n          isParam: false,\n          signature: swaggerUi.api.models[this.model.responseModel].getMockSignature()\n        };\n        responseModelView = new SignatureView({\n          model: responseModel,\n          tagName: 'div'\n        });\n        $('.model-signature', this.$el).append(responseModelView.render().el);\n      } else {\n        $('.model-signature', this.$el).html('');\n      }\n      return this;\n    };\n\n    StatusCodeView.prototype.template = function() {\n      return Handlebars.templates.status_code;\n    };\n\n    return StatusCodeView;\n\n  })(Backbone.View);\n\n  ParameterView = (function(_super) {\n    __extends(ParameterView, _super);\n\n    function ParameterView() {\n      _ref6 = ParameterView.__super__.constructor.apply(this, arguments);\n      return _ref6;\n    }\n\n    ParameterView.prototype.initialize = function() {\n      return Handlebars.registerHelper('isArray', function(param, opts) {\n        if (param.type.toLowerCase() === 'array' || param.allowMultiple) {\n          return opts.fn(this);\n        } else {\n          return opts.inverse(this);\n        }\n      });\n    };\n\n    ParameterView.prototype.render = function() {\n      var contentTypeModel, isParam, parameterContentTypeView, ref, responseContentTypeView, schema, signatureModel, signatureView, template, type;\n      type = this.model.type || this.model.dataType;\n      if (typeof type === 'undefined') {\n        schema = this.model.schema;\n        if (schema && schema['$ref']) {\n          ref = schema['$ref'];\n          if (ref.indexOf('#/definitions/') === 0) {\n            type = ref.substring('#/definitions/'.length);\n          } else {\n            type = ref;\n          }\n        }\n      }\n      this.model.type = type;\n      this.model.paramType = this.model[\"in\"] || this.model.paramType;\n      if (this.model.paramType === 'body') {\n        this.model.isBody = true;\n      }\n      if (type && type.toLowerCase() === 'file') {\n        this.model.isFile = true;\n      }\n      this.model[\"default\"] = this.model[\"default\"] || this.model.defaultValue;\n      template = this.template();\n      $(this.el).html(template(this.model));\n      signatureModel = {\n        sampleJSON: this.model.sampleJSON,\n        isParam: true,\n        signature: this.model.signature\n      };\n      if (this.model.sampleJSON) {\n        signatureView = new SignatureView({\n          model: signatureModel,\n          tagName: 'div'\n        });\n        $('.model-signature', $(this.el)).append(signatureView.render().el);\n      } else {\n        $('.model-signature', $(this.el)).html(this.model.signature);\n      }\n      isParam = false;\n      if (this.model.isBody) {\n        isParam = true;\n      }\n      contentTypeModel = {\n        isParam: isParam\n      };\n      contentTypeModel.consumes = this.model.consumes;\n      if (isParam) {\n        parameterContentTypeView = new ParameterContentTypeView({\n          model: contentTypeModel\n        });\n        $('.parameter-content-type', $(this.el)).append(parameterContentTypeView.render().el);\n      } else {\n        responseContentTypeView = new ResponseContentTypeView({\n          model: contentTypeModel\n        });\n        $('.response-content-type', $(this.el)).append(responseContentTypeView.render().el);\n      }\n      return this;\n    };\n\n    ParameterView.prototype.template = function() {\n      if (this.model.isList) {\n        return Handlebars.templates.param_list;\n      } else {\n        if (this.options.readOnly) {\n          if (this.model.required) {\n            return Handlebars.templates.param_readonly_required;\n          } else {\n            return Handlebars.templates.param_readonly;\n          }\n        } else {\n          if (this.model.required) {\n            return Handlebars.templates.param_required;\n          } else {\n            return Handlebars.templates.param;\n          }\n        }\n      }\n    };\n\n    return ParameterView;\n\n  })(Backbone.View);\n\n  SignatureView = (function(_super) {\n    __extends(SignatureView, _super);\n\n    function SignatureView() {\n      _ref7 = SignatureView.__super__.constructor.apply(this, arguments);\n      return _ref7;\n    }\n\n    SignatureView.prototype.events = {\n      'click a.description-link': 'switchToDescription',\n      'click a.snippet-link': 'switchToSnippet',\n      'mousedown .snippet': 'snippetToTextArea'\n    };\n\n    SignatureView.prototype.initialize = function() {};\n\n    SignatureView.prototype.render = function() {\n      var template;\n      template = this.template();\n      $(this.el).html(template(this.model));\n      this.switchToSnippet();\n      this.isParam = this.model.isParam;\n      if (this.isParam) {\n        $('.notice', $(this.el)).text('Click to set as parameter value');\n      }\n      return this;\n    };\n\n    SignatureView.prototype.template = function() {\n      return Handlebars.templates.signature;\n    };\n\n    SignatureView.prototype.switchToDescription = function(e) {\n      if (e != null) {\n        e.preventDefault();\n      }\n      $(\".snippet\", $(this.el)).hide();\n      $(\".description\", $(this.el)).show();\n      $('.description-link', $(this.el)).addClass('selected');\n      return $('.snippet-link', $(this.el)).removeClass('selected');\n    };\n\n    SignatureView.prototype.switchToSnippet = function(e) {\n      if (e != null) {\n        e.preventDefault();\n      }\n      $(\".description\", $(this.el)).hide();\n      $(\".snippet\", $(this.el)).show();\n      $('.snippet-link', $(this.el)).addClass('selected');\n      return $('.description-link', $(this.el)).removeClass('selected');\n    };\n\n    SignatureView.prototype.snippetToTextArea = function(e) {\n      var textArea;\n      if (this.isParam) {\n        if (e != null) {\n          e.preventDefault();\n        }\n        textArea = $('textarea', $(this.el.parentNode.parentNode.parentNode));\n        if ($.trim(textArea.val()) === '') {\n          return textArea.val(this.model.sampleJSON);\n        }\n      }\n    };\n\n    return SignatureView;\n\n  })(Backbone.View);\n\n  ContentTypeView = (function(_super) {\n    __extends(ContentTypeView, _super);\n\n    function ContentTypeView() {\n      _ref8 = ContentTypeView.__super__.constructor.apply(this, arguments);\n      return _ref8;\n    }\n\n    ContentTypeView.prototype.initialize = function() {};\n\n    ContentTypeView.prototype.render = function() {\n      var template;\n      template = this.template();\n      $(this.el).html(template(this.model));\n      $('label[for=contentType]', $(this.el)).text('Response Content Type');\n      return this;\n    };\n\n    ContentTypeView.prototype.template = function() {\n      return Handlebars.templates.content_type;\n    };\n\n    return ContentTypeView;\n\n  })(Backbone.View);\n\n  ResponseContentTypeView = (function(_super) {\n    __extends(ResponseContentTypeView, _super);\n\n    function ResponseContentTypeView() {\n      _ref9 = ResponseContentTypeView.__super__.constructor.apply(this, arguments);\n      return _ref9;\n    }\n\n    ResponseContentTypeView.prototype.initialize = function() {};\n\n    ResponseContentTypeView.prototype.render = function() {\n      var template;\n      template = this.template();\n      $(this.el).html(template(this.model));\n      $('label[for=responseContentType]', $(this.el)).text('Response Content Type');\n      return this;\n    };\n\n    ResponseContentTypeView.prototype.template = function() {\n      return Handlebars.templates.response_content_type;\n    };\n\n    return ResponseContentTypeView;\n\n  })(Backbone.View);\n\n  ParameterContentTypeView = (function(_super) {\n    __extends(ParameterContentTypeView, _super);\n\n    function ParameterContentTypeView() {\n      _ref10 = ParameterContentTypeView.__super__.constructor.apply(this, arguments);\n      return _ref10;\n    }\n\n    ParameterContentTypeView.prototype.initialize = function() {};\n\n    ParameterContentTypeView.prototype.render = function() {\n      var template;\n      template = this.template();\n      $(this.el).html(template(this.model));\n      $('label[for=parameterContentType]', $(this.el)).text('Parameter content type:');\n      return this;\n    };\n\n    ParameterContentTypeView.prototype.template = function() {\n      return Handlebars.templates.parameter_content_type;\n    };\n\n    return ParameterContentTypeView;\n\n  })(Backbone.View);\n\n  ApiKeyButton = (function(_super) {\n    __extends(ApiKeyButton, _super);\n\n    function ApiKeyButton() {\n      _ref11 = ApiKeyButton.__super__.constructor.apply(this, arguments);\n      return _ref11;\n    }\n\n    ApiKeyButton.prototype.initialize = function() {};\n\n    ApiKeyButton.prototype.render = function() {\n      var template;\n      template = this.template();\n      $(this.el).html(template(this.model));\n      return this;\n    };\n\n    ApiKeyButton.prototype.events = {\n      \"click #apikey_button\": \"toggleApiKeyContainer\",\n      \"click #apply_api_key\": \"applyApiKey\"\n    };\n\n    ApiKeyButton.prototype.applyApiKey = function() {\n      var elem;\n      window.authorizations.add(this.model.name, new ApiKeyAuthorization(this.model.name, $(\"#input_apiKey_entry\").val(), this.model[\"in\"]));\n      window.swaggerUi.load();\n      return elem = $('#apikey_container').show();\n    };\n\n    ApiKeyButton.prototype.toggleApiKeyContainer = function() {\n      var elem;\n      if ($('#apikey_container').length > 0) {\n        elem = $('#apikey_container').first();\n        if (elem.is(':visible')) {\n          return elem.hide();\n        } else {\n          $('.auth_container').hide();\n          return elem.show();\n        }\n      }\n    };\n\n    ApiKeyButton.prototype.template = function() {\n      return Handlebars.templates.apikey_button_view;\n    };\n\n    return ApiKeyButton;\n\n  })(Backbone.View);\n\n  BasicAuthButton = (function(_super) {\n    __extends(BasicAuthButton, _super);\n\n    function BasicAuthButton() {\n      _ref12 = BasicAuthButton.__super__.constructor.apply(this, arguments);\n      return _ref12;\n    }\n\n    BasicAuthButton.prototype.initialize = function() {};\n\n    BasicAuthButton.prototype.render = function() {\n      var template;\n      template = this.template();\n      $(this.el).html(template(this.model));\n      return this;\n    };\n\n    BasicAuthButton.prototype.events = {\n      \"click #basic_auth_button\": \"togglePasswordContainer\",\n      \"click #apply_basic_auth\": \"applyPassword\"\n    };\n\n    BasicAuthButton.prototype.applyPassword = function() {\n      var elem, password, username;\n      console.log(\"applying password\");\n      username = $(\".input_username\").val();\n      password = $(\".input_password\").val();\n      window.authorizations.add(this.model.type, new PasswordAuthorization(\"basic\", username, password));\n      window.swaggerUi.load();\n      return elem = $('#basic_auth_container').hide();\n    };\n\n    BasicAuthButton.prototype.togglePasswordContainer = function() {\n      var elem;\n      if ($('#basic_auth_container').length > 0) {\n        elem = $('#basic_auth_container').show();\n        if (elem.is(':visible')) {\n          return elem.slideUp();\n        } else {\n          $('.auth_container').hide();\n          return elem.show();\n        }\n      }\n    };\n\n    BasicAuthButton.prototype.template = function() {\n      return Handlebars.templates.basic_auth_button_view;\n    };\n\n    return BasicAuthButton;\n\n  })(Backbone.View);\n\n}).call(this);\n"}